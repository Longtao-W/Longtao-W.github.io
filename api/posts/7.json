{"total":78,"pageSize":10,"pageCount":8,"data":[{"title":"计算机体系架构","slug":"systemstructure/base/nounsofcomputersystem","date":"2020-02-12T13:20:21.000Z","updated":"2024-06-30T10:35:56.308Z","comments":true,"path":"api/articles/systemstructure/base/nounsofcomputersystem.json","excerpt":null,"keywords":"云计算","cover":"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635138915ec7f297aec7014e527553987e20070c8","content":"<p>[toc]</p>\n<h1 id=\"cpu\"><a href=\"#cpu\" class=\"headerlink\" title=\"cpu\"></a>cpu</h1><h3 id=\"socket-s\"><a href=\"#socket-s\" class=\"headerlink\" title=\"socket(s)\"></a>socket(s)</h3><p>主板上物理CPU插槽</p>\n<h3 id=\"cpu-die\"><a href=\"#cpu-die\" class=\"headerlink\" title=\"cpu die\"></a>cpu die</h3><p>Die指从晶圆上切割下来的小方块，一个die内可能存在多个cpu内核，一个或多个Die可封装成一个CPU package(cpu socket)。</p>\n<p>die之间通过片外总线互联，不同die之间的cpu内核不能共享cpu缓存(cache)，die内内核可共享L3 cache</p>\n<h3 id=\"NUMA-nodes\"><a href=\"#NUMA-nodes\" class=\"headerlink\" title=\"NUMA nodes\"></a>NUMA nodes</h3><p>一个socket可以划分多个NUMA node</p>\n<ul>\n<li>NUMA 引入了本地内存和远程内存，CPU 访问本地内存的延迟会小于访问远程内存；</li>\n<li>NUMA 的内存分配与内存回收策略结合时会可能会导致 Linux 的频繁交换分区（Swap）进而影响系统的稳定性</li>\n</ul>\n<h3 id=\"Core\"><a href=\"#Core\" class=\"headerlink\" title=\"Core\"></a>Core</h3><p>CPU的内核，一般一个socket含有多个Core</p>\n<h3 id=\"Thread-s\"><a href=\"#Thread-s\" class=\"headerlink\" title=\"Thread(s)\"></a>Thread(s)</h3><p>超线程技术，一个core包含多个并行处理任务的thread，thread有独立执行上下文，共享内部寄存器，我们常说(看)的</p>\n<h1 id=\"主板\"><a href=\"#主板\" class=\"headerlink\" title=\"主板\"></a>主板</h1><h3 id=\"PCH-蓝厂南桥，Platform-Controller-Hub\"><a href=\"#PCH-蓝厂南桥，Platform-Controller-Hub\" class=\"headerlink\" title=\"PCH(蓝厂南桥，Platform Controller Hub)\"></a>PCH(蓝厂南桥，Platform Controller Hub)</h3><p><img src= \"/img/loading.gif\" data-lazy-src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Intel_5_Series_architecture.png\" alt=\"img\"></p>\n<p>淘汰南北桥设计，即将被SOP(不用DMI，用PCIe、USB等)淘汰，功能一直在增删</p>\n<p>PCH具有原来ICH(I/O controller hub,南桥)的全部功能，又具有原来MCH(memory control hub,北桥)的管理引擎功能</p>\n<h3 id=\"mmu-memory-management-unit，内存管理单元\"><a href=\"#mmu-memory-management-unit，内存管理单元\" class=\"headerlink\" title=\"mmu(memory management unit，内存管理单元)\"></a>mmu(memory management unit，内存管理单元)</h3><p>负责处理cpu的内存访问请求的计算机硬件</p>\n<p>功能：虚拟地址到物理地址转换、内存保护、cpu告诉缓存控制</p>\n<h4 id=\"虚拟内存管理技术\"><a href=\"#虚拟内存管理技术\" class=\"headerlink\" title=\"虚拟内存管理技术\"></a>虚拟内存管理技术</h4><p>早期PC 程序直接运行在屋里内存上，有下面几个缺点：</p>\n<ol>\n<li>物理内存不够，如，程序需要100k，物理内存只有64k</li>\n<li>程序每次装载到内存地址不一样</li>\n<li>内存使用率低，需要将整个程序放入内存才能运行</li>\n<li>多任务操作系统，多个进程间地址空间不隔离，一个任务失败可能导致整个系统崩溃</li>\n</ol>\n<h4 id=\"MMU的分页技术\"><a href=\"#MMU的分页技术\" class=\"headerlink\" title=\"MMU的分页技术\"></a>MMU的分页技术</h4><p>虚拟地址空间划分成页(page)，物理地址分成页框(frame)，页和页框大小相同，程序访问虚拟内存，虚拟内存对应物理内存，物理内存并不一定存着虚拟内存所需要的页，可能存在外存中。</p>\n<h1 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h1><h3 id=\"网络字节序\"><a href=\"#网络字节序\" class=\"headerlink\" title=\"网络字节序\"></a>网络字节序</h3><p>msb：most significant bit,最高有效位，二进制中的msb是最高位</p>\n<p>lsb：least significant bit, 最低有效位，二进制中的lsb事最后一位</p>\n<p>大端模式：big-endian，数据高位字节放内存低地址端</p>\n<p>小端模式：little-eendian，数据低位字节放内存低地址端</p>\n<p>主机可能大端也可能小端</p>\n<p>网络字节序与cpu类型、操作系统无关，网络字节序采用大端模式</p>\n<h1 id=\"存储\"><a href=\"#存储\" class=\"headerlink\" title=\"存储\"></a>存储</h1><h1 id=\"体系技术\"><a href=\"#体系技术\" class=\"headerlink\" title=\"体系技术\"></a>体系技术</h1>","raw":null,"categories":[{"name":"编程技术","path":"api/categories/编程技术.json"}],"tags":[{"name":"编程原理","path":"api/tags/编程原理.json"},{"name":"编程基础","path":"api/tags/编程基础.json"}]},{"title":"arping的使用","slug":"tools/arping","date":"2020-02-11T10:20:21.000Z","updated":"2024-06-30T10:35:56.308Z","comments":true,"path":"api/articles/tools/arping.json","excerpt":null,"keywords":"云计算","cover":"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635172298arping-network-scanning-tool.png","content":"<h1 id=\"arping详解\"><a href=\"#arping详解\" class=\"headerlink\" title=\"arping详解\"></a>arping详解</h1><p><strong>版本</strong></p>\n<p>  arping主要干的活就是查看ip的MAC地址及IP占用的问题。</p>\n<p>  arping有两个版本，一个版本是Thomas Habets这个人写的，这个版本有个好处是可以arping &lt;MAC地址&gt;，也就是说我们可以通过MAC地址得到IP。还有一个版本是Linux iputils suite的，这个版本就不能通过MAC地址，解析出IP地址了。</p>\n<p>  可以使用arping -V来查看自己系统的arping的版本</p>\n<p>  楼主观察了CentOS使用的是Linux iputils suite版本的，debian使用的是Thomas Habets。</p>\n<p>  注意两个版本的的arping使用的参数有很大的区别，所以要根据自己的arping版本去使用相应的参数。别到网上抄了个，结果在自己的系统上不能执行。</p>\n<p>  楼主使用的系统debian是Thomas Habets版本的，所以下面的很多参数只适合debian操作系统。</p>\n<p><strong>TH版简介</strong></p>\n<p>  过程：给一个主机，发送arp或者ICMP包，并打印回复的消息。主机可以以hostname，ip地址，mac地址等形式出现。一个请求包，每隔一秒发送一次。为什么说发送的包有arp和icmp呢，因为，当主机为ip或hostname的时候，发送的是arp请求包。当主机是mac地址的时候，发送的则是icmp的echo广播包</p>\n<p><strong>参数</strong></p>\n<p>-0：指定源地址为0.0.0.0，这个一般是在我们刚刚安装好系统，电脑还没配置好IP的时候</p>\n<p>-a：Audible ping.这个当有reply回来的时候，你的电脑有喇叭的话，就会滴滴的叫</p>\n<p>-A：Only count addresses matching requested address</p>\n<p>-b：类似-0，指定源broadcast为255.255.255.255</p>\n<p>-B：指定这个就相当于 arping 255.255.255.255</p>\n<p><strong>-c count</strong>：发送指定数量的arp包后，即停止退出</p>\n<p><strong>-d</strong>：这个比较重要，当局域网有IP占用的时候，可以指定这个参数，当有相同的IP的不同MAC地址reply的时候，arping会退出，退出码为1<br>-D：这个检测是否丢包的，当丢包的时候打印感叹号，正常的时候打印逗号</p>\n<p>-e：和-a相反，当没有reply的时候，会滴滴滴</p>\n<p>-p：打开混杂模式，当前用户对mac无权限时，可以加上这个选</p>\n<p><strong>-r</strong>：输出的时候只打印MAC，写脚本的时候用得到，不用自己对结果awk了</p>\n<p><strong>-R</strong>：输出的时候只打印IP，和上面一样</p>\n<p>-s MAC：指定源MAC地址</p>\n<p>-S IP：指定源IP，设置了源IP，如果目标主机没有到源IP的route，则有可能收不到answer</p>\n<p>-t MAC：指定目的MAC</p>\n<p>-T IP：指定目的IP，</p>\n<p>-i interface：指定发送arp包的设备。不指定的话，默认为系统的第一块网卡</p>\n<p><strong>-q</strong>：表示不打印输出，写脚本不想打印输出的时候，应该用的到</p>\n<p>-u：没啥大用，结果显示的时候，加这个参数和不加，index的显示形式不同</p>\n<p>-v：打印详细的输出，默认打印的好像就是verbose</p>\n<p><strong>-w deadline</strong>：指定两个ping直接的时间间隔，单位为毫秒，默认为1秒</p>\n<p><strong>用法</strong></p>\n<p>讲了这么多，感觉大多数的参数都用不到吧。记住常见用法就OK了</p>\n<p>用法1：查看某个IP的MAC地址</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arping 192.168.131.155</span><br></pre></td></tr></table></figure>\n\n<p>用法2：查看某个IP的MAC地址，并指定count数量</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arping -c 1 192.168.131.155</span><br></pre></td></tr></table></figure>\n\n<p>用法3：当有多块网卡的时候，指定特定的设备来发送请求包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arping -i eth1 -c 1 192.168.131.155</span><br></pre></td></tr></table></figure>\n\n<p>用法4：查看某个IP是否被不同的MAC占用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arping -d 192.168.131.155</span><br></pre></td></tr></table></figure>\n\n<p>用法5：查看某个MAC地址的IP，要在同一子网才查得到</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arping -c 1 52:54:00:a1:31:89</span><br></pre></td></tr></table></figure>\n\n<p>用法6：确定MAC和IP的对应，确定指定的网卡绑定了指定的IP</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arping -c 1  -T 192.168.131.156  00:13:72:f9:ca:60</span><br></pre></td></tr></table></figure>\n\n<p>用法7：确定IP和MAC对应，确定指定IP绑在了指定的网卡上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arping -c 1  -t  00:13:72:f9:ca:60 192.168.131.156</span><br></pre></td></tr></table></figure>\n\n<p>用法8：有时候，本地查不到某主机，可以通过让网关或别的机器去查。以下几种形式测了下都可以</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arping   -c 1  -S 10.240.160.1 -s 88:5a:92:12:c1:c1  10.240.162.115</span><br><span class=\"line\">arping   -c 1  -S 10.240.160.1   10.240.162.115</span><br><span class=\"line\">arping   -c 1  -s 88:5a:92:12:c1:c1  10.240.162.11</span><br></pre></td></tr></table></figure>","raw":null,"categories":[{"name":"编程技术","path":"api/categories/编程技术.json"}],"tags":[{"name":"应用","path":"api/tags/应用.json"}]},{"title":"我的系统性知识总结(gitbook列表)","slug":"top/structreadme","date":"2020-02-11T10:20:21.000Z","updated":"2024-06-30T10:35:56.312Z","comments":true,"path":"api/articles/top/structreadme.json","excerpt":null,"keywords":"云计算","cover":"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635172298arping-network-scanning-tool.png","content":"<h1 id=\"系统性知识的必要性\"><a href=\"#系统性知识的必要性\" class=\"headerlink\" title=\"系统性知识的必要性\"></a>系统性知识的必要性</h1><h1 id=\"gitbook-导航\"><a href=\"#gitbook-导航\" class=\"headerlink\" title=\"gitbook 导航\"></a>gitbook 导航</h1>","raw":null,"categories":[{"name":"说明","path":"api/categories/说明.json"}],"tags":[{"name":"说明","path":"api/tags/说明.json"}]},{"title":"Ubuntu安装mysql server","slug":"tools/mysql","date":"2020-01-28T09:20:21.000Z","updated":"2024-06-30T10:35:56.312Z","comments":true,"path":"api/articles/tools/mysql.json","excerpt":null,"keywords":"云计算","cover":"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635176823R-C.fe03dc72e4b942345afbfec1ad4719e2?rik=ZercdU4lqfV5YA&riu=http%3a%2f%2fsolocodigoweb.com%2fwp-content%2fuploads%2f2014%2f03%2fcronologia-historia-de-mysql-cloud-computing-solocodigoweb.jpg&ehk=wM%2fFWEd31OnMe54%2bioNmlOZv7Jh%2bssZi%2f1oDQHx3bXE%3d&risl=&pid=ImgRaw&r=0","content":"<ol>\n<li><p>sudo apt-get install mysql-server -y</p>\n</li>\n<li><p>初始化配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">ubuntu@VM-0-11-ubuntu:~$ sudo mysql_secure_installation</span><br><span class=\"line\"></span><br><span class=\"line\">Securing the MySQL server deployment.</span><br><span class=\"line\"></span><br><span class=\"line\">Connecting to MySQL using a blank password.</span><br><span class=\"line\"></span><br><span class=\"line\">VALIDATE PASSWORD PLUGIN can be used to test passwords</span><br><span class=\"line\">and improve security. It checks the strength of password</span><br><span class=\"line\">and allows the users to set only those passwords which are</span><br><span class=\"line\">secure enough. Would you like to setup VALIDATE PASSWORD plugin?</span><br><span class=\"line\"></span><br><span class=\"line\">Press y|Y for Yes, any other key for No: N</span><br><span class=\"line\">Please set the password for root here.</span><br><span class=\"line\"></span><br><span class=\"line\">New password:</span><br><span class=\"line\"></span><br><span class=\"line\">Re-enter new password:</span><br><span class=\"line\">By default, a MySQL installation has an anonymous user,</span><br><span class=\"line\">allowing anyone to log into MySQL without having to have</span><br><span class=\"line\">a user account created for them. This is intended only for</span><br><span class=\"line\">testing, and to make the installation go a bit smoother.</span><br><span class=\"line\">You should remove them before moving into a production</span><br><span class=\"line\">environment.</span><br><span class=\"line\"></span><br><span class=\"line\">Remove anonymous users? (Press y|Y for Yes, any other key for No) : N</span><br><span class=\"line\"></span><br><span class=\"line\"> ... skipping.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Normally, root should only be allowed to connect from</span><br><span class=\"line\">&#x27;localhost&#x27;. This ensures that someone cannot guess at</span><br><span class=\"line\">the root password from the network.</span><br><span class=\"line\"></span><br><span class=\"line\">Disallow root login remotely? (Press y|Y for Yes, any other key for No) : N</span><br><span class=\"line\"></span><br><span class=\"line\"> ... skipping.</span><br><span class=\"line\">By default, MySQL comes with a database named &#x27;test&#x27; that</span><br><span class=\"line\">anyone can access. This is also intended only for testing,</span><br><span class=\"line\">and should be removed before moving into a production</span><br><span class=\"line\">environment.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Remove test database and access to it? (Press y|Y for Yes, any other key for No) : N</span><br><span class=\"line\"></span><br><span class=\"line\"> ... skipping.</span><br><span class=\"line\">Reloading the privilege tables will ensure that all changes</span><br><span class=\"line\">made so far will take effect immediately.</span><br><span class=\"line\"></span><br><span class=\"line\">Reload privilege tables now? (Press y|Y for Yes, any other key for No) : Y</span><br><span class=\"line\">Success.</span><br><span class=\"line\"></span><br><span class=\"line\">All done!</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n","raw":null,"categories":[{"name":"编程技术","path":"api/categories/编程技术.json"}],"tags":[{"name":"工具","path":"api/tags/工具.json"}]},{"title":"计算机基本组成","slug":"systemstructure/base/computerprinciples","date":"2020-01-25T10:24:21.000Z","updated":"2024-06-30T10:35:56.308Z","comments":true,"path":"api/articles/systemstructure/base/computerprinciples.json","excerpt":null,"keywords":"云计算","cover":"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635138820R-C.a85787a0d06496906299e72de39ffb00?rik=9SM14JX30i1BPQ&riu=http%3a%2f%2fimg.mp.itc.cn%2fupload%2f20170420%2ff813101deccb4bcea732569ecbcf2ab7_th.jpeg&ehk=Mprq0bxfRYz7AO70UBj3%2fqUqXpN6ELRfJqKVMtD3pUY%3d&risl=&pid=ImgRaw&r=0","content":"<p>[toc]</p>\n<h1 id=\"计算机基本组成\"><a href=\"#计算机基本组成\" class=\"headerlink\" title=\"计算机基本组成\"></a>计算机基本组成</h1><h2 id=\"基本组成\"><a href=\"#基本组成\" class=\"headerlink\" title=\"基本组成\"></a>基本组成</h2><h3 id=\"存储器\"><a href=\"#存储器\" class=\"headerlink\" title=\"存储器\"></a>存储器</h3><p>存放数据和程序的设备，根据功能分为主存、辅存</p>\n<h4 id=\"主存\"><a href=\"#主存\" class=\"headerlink\" title=\"主存\"></a>主存</h4><p>主存储器，通俗称内存，直接与CPU通过MMU交换信息(cpu内部还有几级高速缓存)，速度比较快，容量比较小，ROM掉电非易失，RAM掉电易失(我们电脑的内存)</p>\n<h4 id=\"辅存\"><a href=\"#辅存\" class=\"headerlink\" title=\"辅存\"></a>辅存</h4><p>又称外存，与主存交换信息，速度慢，容量大，掉电非易失，一般就是指我们的固态硬盘、机械硬盘、U盘、光驱+光盘等</p>\n<h3 id=\"运算器\"><a href=\"#运算器\" class=\"headerlink\" title=\"运算器\"></a>运算器</h3><p>位于CPU(中央处理器，central processing unit)中，基本就是指ALU，中文世界一般还把FPU、GPU、寄存器组、累加器、数据总线划入其中</p>\n<h4 id=\"FPU\"><a href=\"#FPU\" class=\"headerlink\" title=\"FPU\"></a>FPU</h4><p>浮点运算器(floating point unit)，电路实现的运行浮点运算的结构(以前用ALU模拟，精度低)，通常集成在CPU中，现代计算机中浮点运算会与SIMD(Single Instruction Multiple Data，一个控制器控制多个处理器)集成在一个指令集内</p>\n<h4 id=\"GPU\"><a href=\"#GPU\" class=\"headerlink\" title=\"GPU\"></a>GPU</h4><p>入行处理单元，详见GPU设计与架构文章</p>\n<h3 id=\"控制器\"><a href=\"#控制器\" class=\"headerlink\" title=\"控制器\"></a>控制器</h3><p>控制器 control unit，现代计算机集成在CPU中，指导处理器操作(二进制解码指令转换为控制、定时等信号)</p>\n<h3 id=\"输入设备\"><a href=\"#输入设备\" class=\"headerlink\" title=\"输入设备\"></a>输入设备</h3><p>外设输入，键鼠等</p>\n<h3 id=\"输出设备\"><a href=\"#输出设备\" class=\"headerlink\" title=\"输出设备\"></a>输出设备</h3><p>外设输出，显示器等</p>\n<h2 id=\"总线信息\"><a href=\"#总线信息\" class=\"headerlink\" title=\"总线信息\"></a>总线信息</h2><h3 id=\"位置分类\"><a href=\"#位置分类\" class=\"headerlink\" title=\"位置分类\"></a>位置分类</h3><ul>\n<li>片内总线：芯片内部传送信息的通道</li>\n<li>外部总线：CPU与外设通信,PCI(E)、PXI(E)总线等</li>\n<li>系统总线：<ul>\n<li>数据总线：在CPU与RAM之间传输数据</li>\n<li>地址总线：指定RAM存储地址或者I/O设备地址</li>\n<li>控制总线：将控制器信号传输到其他设备(存储器、I/O设备等)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"传送方式分类\"><a href=\"#传送方式分类\" class=\"headerlink\" title=\"传送方式分类\"></a>传送方式分类</h3><ul>\n<li>串行总线：Serial communication每次传一位(bit)，rs-232/422/423/485、I2C、PCIE、USB、以太网、SATA等，现在是高速串行总线时代！</li>\n<li>并行总线：同时传送多位数，ATA、PCI、SCSI等，目前用处较少，原因是根据SSN原理限制了并行带宽</li>\n</ul>\n<h2 id=\"主板接口\"><a href=\"#主板接口\" class=\"headerlink\" title=\"主板接口\"></a>主板接口</h2><h4 id=\"PCIE插槽\"><a href=\"#PCIE插槽\" class=\"headerlink\" title=\"PCIE插槽\"></a>PCIE插槽</h4><p>一般插显卡、声卡、无线网卡等，由短到长分别为：PCIEx1、PCIEx4、PCIEx8、PCIEx16，后面数字代表PCIE通道数量</p>\n<h4 id=\"M-2插槽\"><a href=\"#M-2插槽\" class=\"headerlink\" title=\"M.2插槽\"></a>M.2插槽</h4><p>有两个PCIE通道的socket2和四通道的socket3两个版本</p>\n<h4 id=\"SATA插槽\"><a href=\"#SATA插槽\" class=\"headerlink\" title=\"SATA插槽\"></a>SATA插槽</h4><p>硬盘插槽，一般一个PCIE通道</p>\n<h4 id=\"DIMM插槽\"><a href=\"#DIMM插槽\" class=\"headerlink\" title=\"DIMM插槽\"></a>DIMM插槽</h4><p>内存插槽</p>\n","raw":null,"categories":[{"name":"编程技术","path":"api/categories/编程技术.json"}],"tags":[{"name":"编程原理","path":"api/tags/编程原理.json"},{"name":"编程基础","path":"api/tags/编程基础.json"}]},{"title":"Hive搭建 centos","slug":"tools/hive","date":"2019-12-26T15:40:51.000Z","updated":"2024-06-30T10:35:56.312Z","comments":true,"path":"api/articles/tools/hive.json","excerpt":null,"keywords":"云计算","cover":"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635172894hive-sql.jpg","content":"<p>[toc]</p>\n<h4 id=\"centos下-Hive搭建（mysql、hadoop-、jdk）\"><a href=\"#centos下-Hive搭建（mysql、hadoop-、jdk）\" class=\"headerlink\" title=\"centos下 Hive搭建（mysql、hadoop 、jdk）\"></a>centos下 Hive搭建（mysql、hadoop 、jdk）</h4><h4 id=\"Mysql\"><a href=\"#Mysql\" class=\"headerlink\" title=\"Mysql\"></a>Mysql</h4><ol>\n<li><p> wget <a href=\"https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm\">https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</a></p>\n</li>\n<li><p>```<br> rpm -ivh mysql80-community-release-el7-3.noarch.rpm</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">3.  &#96;&#96;&#96;</span><br><span class=\"line\">    yum install mysql-community-server -y</span><br><span class=\"line\">    systemctl enable mysqld</span><br><span class=\"line\">    systemctl start mysqld</span><br><span class=\"line\">    grep &#39;temporary password&#39; &#x2F;var&#x2F;log&#x2F;mysqld.log #获得密码</span><br><span class=\"line\">    mysql -u root -p</span><br><span class=\"line\">    mysql&gt; set global validate_password.policy&#x3D;0;</span><br><span class=\"line\">    mysql&gt; set global validate_password.length&#x3D;1;</span><br><span class=\"line\">    mysql&gt; alter user &#39;root&#39;@&#39;localhost&#39; identified by &#39;password&#39;;</span><br><span class=\"line\">    firewall-cmd --zone&#x3D;public --add-port&#x3D;3306&#x2F;tcp --permanent</span><br><span class=\"line\">    firewall-cmd --reload</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>完整脚本</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span><br><span class=\"line\">rpm -ivh mysql80-community-release-el7-3.noarch.rpm</span><br><span class=\"line\">yum install mysql-community-server -y</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> mysqld</span><br><span class=\"line\">systemctl start mysqld</span><br><span class=\"line\">grep <span class=\"string\">&#x27;temporary password&#x27;</span> /var/<span class=\"built_in\">log</span>/mysqld.log <span class=\"comment\">#获得密码</span></span><br><span class=\"line\">mysql -u root -p</span><br><span class=\"line\">mysql&gt; <span class=\"built_in\">set</span> global validate_password.policy=0;</span><br><span class=\"line\">mysql&gt; <span class=\"built_in\">set</span> global validate_password.length=1;</span><br><span class=\"line\">mysql&gt; alter user <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> identified by <span class=\"string\">&#x27;password&#x27;</span>;</span><br><span class=\"line\">firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"hadoop安装\"><a href=\"#hadoop安装\" class=\"headerlink\" title=\"hadoop安装\"></a>hadoop安装</h4><p>Hadoop的核心由3个部分组成：</p>\n<p>  HDFS: Hadoop Distributed File System，分布式文件系统，hdfs还可以再细分为NameNode、SecondaryNameNode、DataNode。</p>\n<p>  YARN: Yet Another Resource Negotiator，资源管理调度系统</p>\n<p>  Mapreduce：分布式运算框架</p>\n<p>1.安装jdk7或8（不支持11）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">下载</span></span><br><span class=\"line\">wget -O jdk-8u131-linux-x64.tar.gz --no-check-certificate --no-cookies --header &quot;Cookie: oraclelicense=accept-securebackup-cookie&quot; http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar zxvf ~/jdk-8u131-linux-x64.tar.gz -C /usr/local/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 配置环境</span></span><br><span class=\"line\">vi /etc/profile</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  后面添加</span></span><br><span class=\"line\">export JAVA_HOME=/usr/local/jdk1.8.0_131</span><br><span class=\"line\">export CLASSPATH=$CLASSPATH:$JAVA_HOME/lib/</span><br><span class=\"line\">export PATH=$PATH:$JAVA_HOME/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重新加载配置</span></span><br><span class=\"line\">source /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">验证</span></span><br><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">下载hadoop</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> wget https://downloads.apache.org/hadoop/common/hadoop-3.2.2/hadoop-3.2.2.tar.gz</span></span><br><span class=\"line\">wget http://mirror.bit.edu.cn/apache/hadoop/common/hadoop-2.10.1/hadoop-2.10.1.tar.gz</span><br><span class=\"line\">tar zxvf hadoop-2.10.1.tar.gz -C /usr/local/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">配置jdk</span></span><br><span class=\"line\">vi $&#123;HADOOP_HMOE&#125;/etc/hadoop/hadoop-003env.sh</span><br><span class=\"line\">export JAVA_HOME=/usr/local/jdk1.8.0_131/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">设置伪分布模式（Pseudo-Distributed Operation）修改etc/hadoop/core-site.xml文件，增加配置（fs.defaultFS：默认文件系统名称）：</span></span><br><span class=\"line\">vi $&#123;HADOOP_HMOE&#125;/etc/hadoop/core-site.xml</span><br><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">    &lt;property&gt;</span><br><span class=\"line\">        &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class=\"line\">        &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;</span><br><span class=\"line\">    &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 修改etc/hadoop/hdfs-site.xml文件，增加配置（dfs.replication：文件副本数）：</span></span><br><span class=\"line\"> &lt;configuration&gt;</span><br><span class=\"line\">    &lt;property&gt;</span><br><span class=\"line\">        &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class=\"line\">        &lt;value&gt;1&lt;/value&gt;</span><br><span class=\"line\">    &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">格式化文件系统</span></span><br><span class=\"line\">/usr/local/hadoop-2.10.1/bin/hdfs namenode -format</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">启动NameNode和DataNode进程（启动hdfs）</span></span><br><span class=\"line\">/usr/local/hadoop-2.10.1/sbin/start-dfs.sh // 启动NameNode和DataNode进程</span><br><span class=\"line\">/usr/local/hadoop-2.10.1/sbin/stop-dfs.sh  // 关闭NameNode和DataNode进程</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查看HDFS验证成功</span></span><br><span class=\"line\">http://172.20.19.33:50070</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">启动yarn</span></span><br><span class=\"line\">/usr/local/hadoop-2.10.1/sbin/start-yarn.sh</span><br><span class=\"line\">/usr/local/hadoop-2.10.1/sbin/stop-yarn.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查看YARN</span></span><br><span class=\"line\">http://172.20.19.33:8088/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 配置环境</span></span><br><span class=\"line\">vi /etc/profile</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  后面添加</span></span><br><span class=\"line\">export HADOOP_HOME=/usr/local/hadoop-2.10.1</span><br><span class=\"line\">export PATH=$PATH:$HADOOP_HOME/bin</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重新加载配置</span></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Hive安装\"><a href=\"#Hive安装\" class=\"headerlink\" title=\"Hive安装\"></a>Hive安装</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 下载</span></span><br><span class=\"line\">wget https://mirrors.tuna.tsinghua.edu.cn/apache/hive/hive-3.1.2/apache-hive-3.1.2-bin.tar.gz -c #比较慢，断点下载</span><br><span class=\"line\">tar zxvf apache-hive-3.1.2-bin.tar.gz -C /usr/local/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">改名去bin</span></span><br><span class=\"line\">mv apache-hive-3.1.2-bin/ apache-hive-3.1.2/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">配置</span></span><br><span class=\"line\">cd /usr/local/apache-hive-3.1.2/conf/</span><br><span class=\"line\">cp hive-log4j2.properties.template hive-log4j2.properties</span><br><span class=\"line\">vi /usr/local/apache-hive-3.1.2/conf/hive-site.xml</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;</span><br><span class=\"line\">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span><br><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;jdbc:mysql://172.20.19.33:3306/hive?createDatabaseIfNotExist=true&lt;/value&gt;</span><br><span class=\"line\">　&lt;/property&gt;</span><br><span class=\"line\">　&lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;</span><br><span class=\"line\">　　&lt;value&gt;com.mysql.cj.jdbc.Driver&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;root&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;password&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">初始化数据库</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">下载并拷贝protobuf-java-3.6.1.jar和mysql-connector-java-8.0.17.jar到<span class=\"variable\">$HIVE_HOME</span>/lib目录下，删除已有的protobuf-java-2.5.0.jar文件。统一hive和mysql服务的时区。</span></span><br><span class=\"line\">wget -c https://repo1.maven.org/maven2/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar</span><br><span class=\"line\">wget -c https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar</span><br><span class=\"line\">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime # hive和mysql服务器都要执行，mysql要重启服务</span><br><span class=\"line\">cd /usr/local/apache-hive-3.1.2/bin/</span><br><span class=\"line\">/usr/local/apache-hive-3.1.2/bin/schematool -dbType mysql -initSchema # 报错需要修改mysql访问权限</span><br><span class=\"line\">/usr/local/apache-hive-3.1.2/bin/hive</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  启动hiveserver2：</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 修改<span class=\"variable\">$HADOOP_HOME</span>/etc/hadoop/core-site.xml文件，增加如下配置：</span></span><br><span class=\"line\">vi /usr/local/hadoop-2.10.1/etc/hadoop/core-site.xml</span><br><span class=\"line\">&lt;property&gt;</span><br><span class=\"line\">        &lt;name&gt;hadoop.proxyuser.root.hosts&lt;/name&gt;</span><br><span class=\"line\">        &lt;value&gt;*&lt;/value&gt;</span><br><span class=\"line\">&lt;/property&gt;</span><br><span class=\"line\">&lt;property&gt;</span><br><span class=\"line\">        &lt;name&gt;hadoop.proxyuser.root.groups&lt;/name&gt;</span><br><span class=\"line\">        &lt;value&gt;*&lt;/value&gt;</span><br><span class=\"line\">&lt;/property&gt;</span><br><span class=\"line\">&lt;property&gt;</span><br><span class=\"line\">         &lt;name&gt;hadoop.proxyuser.hadoop.hosts&lt;/name&gt;</span><br><span class=\"line\">        &lt;value&gt;*&lt;/value&gt;</span><br><span class=\"line\">&lt;/property&gt;</span><br><span class=\"line\"> &lt;property&gt;</span><br><span class=\"line\">         &lt;name&gt;hadoop.proxyuser.hadoop.groups&lt;/name&gt;</span><br><span class=\"line\">         &lt;value&gt;*&lt;/value&gt;</span><br><span class=\"line\">&lt;/property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">vi /usr/local/apache-hive-3.1.2/conf/hive-site.xml</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">     &lt;name&gt;hive.server2.thrift.port&lt;/name&gt;</span><br><span class=\"line\">     &lt;value&gt;10000&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">     &lt;name&gt;hive.server2.thrift.bind.host&lt;/name&gt;</span><br><span class=\"line\">     &lt;value&gt;172.20.19.33&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/usr/local/apache-hive-3.1.2/bin/hiveserver2 &amp;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>mysql权限修改</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 改表法</span></span><br><span class=\"line\">mysql -u root -pvmware</span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\">use mysql;</span></span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\">update user <span class=\"built_in\">set</span> host = <span class=\"string\">&#x27;%&#x27;</span> <span class=\"built_in\">where</span> user = <span class=\"string\">&#x27;root&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\">flush privileges;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h5><p><strong>Hive Shell 、Hive Web UI及JDBC 三种连接Hive Server的方式是互斥的，同一时刻只能用一种方式连接</strong></p>\n<h3 id=\"端口说明\"><a href=\"#端口说明\" class=\"headerlink\" title=\"端口说明\"></a>端口说明</h3><table>\n<thead>\n<tr>\n<th>组件</th>\n<th>Daemon</th>\n<th>端口</th>\n<th>配置</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>HDFS</td>\n<td>DataNode</td>\n<td>50010</td>\n<td>dfs.datanode.address</td>\n<td>datanode服务端口，用于数据传输</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>50075</td>\n<td>dfs.datanode.http.address</td>\n<td>http服务的端口</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>50475</td>\n<td>dfs.datanode.https.address</td>\n<td>https服务的端口</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>50020</td>\n<td>dfs.datanode.ipc.address</td>\n<td>ipc服务的端口</td>\n</tr>\n<tr>\n<td></td>\n<td>NameNode</td>\n<td>50070</td>\n<td>dfs.namenode.http-address</td>\n<td>http服务的端口</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>50470</td>\n<td>dfs.namenode.https-address</td>\n<td>https服务的端口</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>8020</td>\n<td>fs.defaultFS</td>\n<td>接收Client连接的RPC端口，用于获取文件系统metadata信息。</td>\n</tr>\n<tr>\n<td></td>\n<td>journalnode</td>\n<td>8485</td>\n<td>dfs.journalnode.rpc-address</td>\n<td>RPC服务</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>8480</td>\n<td>dfs.journalnode.http-address</td>\n<td>HTTP服务</td>\n</tr>\n<tr>\n<td></td>\n<td>ZKFC</td>\n<td>8019</td>\n<td>dfs.ha.zkfc.port</td>\n<td>ZooKeeper FailoverController，用于NN HA</td>\n</tr>\n<tr>\n<td>YARN</td>\n<td>ResourceManager</td>\n<td>8032</td>\n<td>yarn.resourcemanager.address</td>\n<td>RM的applications manager(ASM)端口</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>8030</td>\n<td>yarn.resourcemanager.scheduler.address</td>\n<td>scheduler组件的IPC端口</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>8031</td>\n<td>yarn.resourcemanager.resource-tracker.address</td>\n<td>IPC</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>8033</td>\n<td>yarn.resourcemanager.admin.address</td>\n<td>IPC</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>8088</td>\n<td>yarn.resourcemanager.webapp.address</td>\n<td>http服务端口</td>\n</tr>\n<tr>\n<td></td>\n<td>NodeManager</td>\n<td>8040</td>\n<td>yarn.nodemanager.localizer.address</td>\n<td>localizer IPC</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>8042</td>\n<td>yarn.nodemanager.webapp.address</td>\n<td>http服务端口</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>8041</td>\n<td>yarn.nodemanager.address</td>\n<td>NM中container manager的端口</td>\n</tr>\n<tr>\n<td></td>\n<td>JobHistory Server</td>\n<td>10020</td>\n<td>mapreduce.jobhistory.address</td>\n<td>IPC</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>19888</td>\n<td>mapreduce.jobhistory.webapp.address</td>\n<td>http服务端口</td>\n</tr>\n<tr>\n<td>HBase</td>\n<td>Master</td>\n<td>60000</td>\n<td>hbase.master.port</td>\n<td>IPC</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>60010</td>\n<td>hbase.master.info.port</td>\n<td>http服务端口</td>\n</tr>\n<tr>\n<td></td>\n<td>RegionServer</td>\n<td>60020</td>\n<td>hbase.regionserver.port</td>\n<td>IPC</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>60030</td>\n<td>hbase.regionserver.info.port</td>\n<td>http服务端口</td>\n</tr>\n<tr>\n<td></td>\n<td>HQuorumPeer</td>\n<td>2181</td>\n<td>hbase.zookeeper.property.clientPort</td>\n<td>HBase-managed ZK mode，使用独立的ZooKeeper集群则不会启用该端口。</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>2888</td>\n<td>hbase.zookeeper.peerport</td>\n<td>HBase-managed ZK mode，使用独立的ZooKeeper集群则不会启用该端口。</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>3888</td>\n<td>hbase.zookeeper.leaderport</td>\n<td>HBase-managed ZK mode，使用独立的ZooKeeper集群则不会启用该端口。</td>\n</tr>\n<tr>\n<td>Hive</td>\n<td>Metastore</td>\n<td>9083</td>\n<td>/etc/default/hive-metastore中export PORT=<port>来更新默认端口</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>HiveServer</td>\n<td>10000</td>\n<td>/etc/hive/conf/hive-env.sh中export HIVE_SERVER2_THRIFT_PORT=<port>来更新默认端口</td>\n<td></td>\n</tr>\n<tr>\n<td>ZooKeeper</td>\n<td>Server</td>\n<td>2181</td>\n<td>/etc/zookeeper/conf/zoo.cfg中clientPort=<port></td>\n<td>对客户端提供服务的端口</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>2888</td>\n<td>/etc/zookeeper/conf/zoo.cfg中server.x=[hostname]:nnnnn[:nnnnn]，标蓝部分</td>\n<td>follower用来连接到leader，只在leader上监听该端口。</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>3888</td>\n<td>/etc/zookeeper/conf/zoo.cfg中server.x=[hostname]:nnnnn[:nnnnn]，标蓝部分</td>\n<td>用于leader选举的。只在electionAlg是1,2或3(默认)时需要。</td>\n</tr>\n</tbody></table>\n","raw":null,"categories":[{"name":"编程技术","path":"api/categories/编程技术.json"}],"tags":[{"name":"应用","path":"api/tags/应用.json"}]},{"title":"50行代码实现md图床","slug":"tools/picpool","date":"2019-12-08T12:30:41.000Z","updated":"2024-06-30T10:35:56.312Z","comments":true,"path":"api/articles/tools/picpool.json","excerpt":null,"keywords":"云计算","cover":"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635176968206911424-carribean-opt-1-tcm126-2202438.jpg","content":"<p><a href=\"http://longtao.fun/\">首页</a> -&gt; <a href=\"http://longtao.fun/product/product.html\">项目列表</a></p>\n<p>原文地址：<a href=\"https://longtao.fun/picture_pool/\">https://longtao.fun/picture_pool/</a></p>\n<h3 id=\"简单介绍\"><a href=\"#简单介绍\" class=\"headerlink\" title=\"简单介绍\"></a>简单介绍</h3><p>服务端代码,使用flask提供api服务，两个接口，一个用来上传，一个用来查看图片，上传图片返回图片url</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> uuid</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request, make_response</span><br><span class=\"line\"></span><br><span class=\"line\">ip = <span class=\"string\">&#x27;127.0.0.1&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">file_path = os.path.join(os.path.dirname(__file__), <span class=\"string\">&#x27;pics&#x27;</span>)</span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/eus/v1/photo&quot;</span>, methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_frame</span>():</span></span><br><span class=\"line\">    upload_file = request.data</span><br><span class=\"line\">    img = base64.b64decode(upload_file)</span><br><span class=\"line\">    file_name = <span class=\"built_in\">str</span>(uuid.uuid1())</span><br><span class=\"line\">    file_paths = os.path.join(file_path, file_name)</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_paths, <span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        f.write(img)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;http://&#123;&#125;:5555/eus/v1/show/&#123;&#125;&#x27;</span>.<span class=\"built_in\">format</span>(ip, file_name)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/eus/v1/show/&lt;string:filename&gt;&quot;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show</span>(<span class=\"params\">filename</span>):</span></span><br><span class=\"line\">    file_paths = os.path.join(file_path, filename)</span><br><span class=\"line\">    f = <span class=\"built_in\">open</span>(file_paths, <span class=\"string\">&quot;rb&quot;</span>).read()</span><br><span class=\"line\">    response = make_response(f)</span><br><span class=\"line\">    response.headers[<span class=\"string\">&#x27;Content-Type&#x27;</span>] = <span class=\"string\">&#x27;image/png&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> response</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">False</span>, host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>, port=<span class=\"number\">5555</span>)</span><br></pre></td></tr></table></figure>\n\n<p>客户端脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> argparse</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(sys.argv) == <span class=\"number\">1</span>:</span><br><span class=\"line\">    sys.argv.append(<span class=\"string\">&#x27;--help&#x27;</span>)</span><br><span class=\"line\">parser = argparse.ArgumentParser()</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;-s&#x27;</span>, <span class=\"string\">&#x27;--source&#x27;</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">str</span>, nargs=<span class=\"string\">&#x27;+&#x27;</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&quot;必须传入文件&quot;</span>, required=<span class=\"literal\">True</span>)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;-i&#x27;</span>, <span class=\"string\">&#x27;--ip&#x27;</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">str</span>, nargs=<span class=\"number\">1</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&quot;必须指定地址&quot;</span>, required=<span class=\"literal\">True</span>)</span><br><span class=\"line\">args = parser.parse_args()</span><br><span class=\"line\">image_list = args.source</span><br><span class=\"line\">url = <span class=\"string\">&#x27;http://&#123;&#125;:5555/eus/v1/photo&#x27;</span>.<span class=\"built_in\">format</span>(args.ip[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span>(<span class=\"params\">_img</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> os.path.isfile(_img):</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(_img, <span class=\"string\">&quot;rb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            file = f.read()</span><br><span class=\"line\">            encode_f = base64.b64encode(file)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        file = requests.get(_img).content</span><br><span class=\"line\">        encode_f = base64.b64encode(file)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> encode_f</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> img <span class=\"keyword\">in</span> image_list:</span><br><span class=\"line\">        req = requests.post(url=url, data=get_data(img))</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;http://&quot;</span>+<span class=\"built_in\">str</span>(req.text))</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"todo\"><a href=\"#todo\" class=\"headerlink\" title=\"todo\"></a>todo</h4><ol>\n<li>使用go重写方便部署</li>\n<li>图片去重</li>\n<li>图片压缩</li>\n</ol>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><h4 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h4><ol>\n<li> 下载本repo源码</li>\n<li> 安装python3环境，安装</li>\n<li> 修改main 中的ip地址为你的服务端公网ip，是遏制iptables开启5555端口;</li>\n<li> nohup python3 $repoPath/main.py &amp;启动或者通过systemd启动</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;[Unit]</span><br><span class=\"line\">Description=simple picture pool</span><br><span class=\"line\">   </span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">ExecStart=/usr/bin/python3 /root/pic_pool/picture_pool/main.py &gt; /dev/null   2&gt;&amp;1</span><br><span class=\"line\">   </span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target &quot; &gt; /etc/systemd/system/spp.service</span><br><span class=\"line\">systemctl status spp</span><br><span class=\"line\">systemctl start spp</span><br><span class=\"line\">systemctl enable spp</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h4><ol>\n<li> 在你的修改upload_script.py 中的ip为你搭建的服务端ip（默认的172.20.18.38是我在0.10搭建好的）；</li>\n<li>在你的markdown 编辑器按照以下操作文件-&gt;偏好设置-&gt;图像-&gt;custom上传服务，在命令里填写<code>python3 upload_script.py的绝对路径 -i 你的服务ip地址  -s</code> 例如<code>python3 /home/longtao/workspace/projects/picture_pool/upload_script.py -i 172.20.18.38 -s</code><br> <img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211027/16353092275f552d50-f59f-11eb-8016-fa1e86d74c00\"></li>\n<li>选择插入图片时上传图片，勾选，本地和网络，点击验证上传服务，如下为成功验证<br> <img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211027/163530923262f6ba28-f59f-11eb-90f6-fa1e86d74c00\"></li>\n</ol>\n","raw":null,"categories":[{"name":"编程技术","path":"api/categories/编程技术.json"}],"tags":[{"name":"应用","path":"api/tags/应用.json"}]},{"title":"jenkins安装","slug":"tools/jenkins","date":"2019-11-27T13:29:31.000Z","updated":"2024-06-30T10:35:56.312Z","comments":true,"path":"api/articles/tools/jenkins.json","excerpt":null,"keywords":"云计算","cover":"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635174290jenkins-angry.png?resize=331%2C372&ssl=1","content":"<h2 id=\"下载镜像\"><a href=\"#下载镜像\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h2><p>打开终端，输入docker search命令搜索 Docker Hub 上可用的 Jenkins 镜像：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker search jenkins</span><br><span class=\"line\">NAME                                         DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED</span><br><span class=\"line\">jenkins                                      Official Jenkins Docker image                   4328                [OK]</span><br><span class=\"line\">jenkins&#x2F;jenkins                              The leading open source automation server       1563</span><br><span class=\"line\">jenkinsci&#x2F;blueocean                          https:&#x2F;&#x2F;jenkins.io&#x2F;projects&#x2F;blueocean           399</span><br><span class=\"line\">jenkinsci&#x2F;jenkins                            Jenkins Continuous Integration and Delivery …   367</span><br><span class=\"line\">jenkinsci&#x2F;jnlp-slave                         A Jenkins slave using JNLP to establish conn…   110                                     [OK]</span><br><span class=\"line\">jenkins&#x2F;jnlp-slave                           a Jenkins agent (FKA &quot;slave&quot;) using JNLP to …   86                                      [OK]</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>根据镜像OFFICIAL标签判断，位列第一、名字为jenkins的是 Jenkins 官方提供的镜像。我们是不是应该使用这个官方镜像呢？</p>\n<p>如果你看过 Jenkins 文档中 Docker 安装 小节，会发现官方推荐使用的镜像是jenkinsci/blueocean，该镜像包含当前的长期支持 (LTS) 的 Jenkins 版本 (可以生产使用) ，并捆绑了所有 Blue Ocean 插件和功能。</p>\n<p>第一次安装的时候使用的是jenkins镜像，其集成的 Jenkins 版本比较高，结果出现好多插件不兼容的情况，对于我等小白来说是一件比较麻烦的事。</p>\n<p>这里我们果断使用jenkinsci/blueocean镜像，使用docker pull命令拉取：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker pull jenkinsci&#x2F;blueocean</span><br><span class=\"line\">Using default tag: latest</span><br><span class=\"line\">latest: Pulling from jenkinsci&#x2F;blueocean</span><br><span class=\"line\">Digest: sha256:523769431f19830cfda7ceae37c59c9f01affb551836933aa30114dcaa5df9eb</span><br><span class=\"line\">Status: Image is up to date for jenkinsci&#x2F;blueocean:latest</span><br></pre></td></tr></table></figure>\n\n<p>在本地镜像仓库确认是否已存在：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker images</span><br><span class=\"line\">REPOSITORY            TAG                 IMAGE ID            CREATED             SIZE</span><br><span class=\"line\">jenkinsci&#x2F;blueocean   latest              ef2dc74fe285        21 hours ago        552MB</span><br><span class=\"line\">mysql                 latest              990386cbd5c0        2 months ago        443MB</span><br><span class=\"line\">jenkins               latest              cd14cecfdb3a        11 months ago       696MB</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"运行容器\"><a href=\"#运行容器\" class=\"headerlink\" title=\"运行容器\"></a>运行容器</h2><p>现在，就可以基于下载的镜像运行 Jenkins 容器了，有以下两种运行方式供你参考：</p>\n<p>方式一：直接运行，运行期间产生的所有数据都保存在容器内部，容器销毁，数据丢失。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run \\</span><br><span class=\"line\">    --name jenkins-blueocean \\</span><br><span class=\"line\">    -d \\</span><br><span class=\"line\">    -p 8081:8080 \\</span><br><span class=\"line\">    -p 50001:50000 \\</span><br><span class=\"line\">    jenkinsci&#x2F;blueocean</span><br></pre></td></tr></table></figure>\n\n<p>方式二：Docker 会在宿主机上创建一个数据卷jenkins-data，容器映射该卷以持久化数据。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run \\</span><br><span class=\"line\">  --name jenkins-blueocean \\</span><br><span class=\"line\">  -d \\</span><br><span class=\"line\">  -p 8081:8080 \\</span><br><span class=\"line\">  -p 50000:50000 \\</span><br><span class=\"line\">  -v jenkins-data:&#x2F;var&#x2F;jenkins_home \\</span><br><span class=\"line\">  jenkinsci&#x2F;blueocean</span><br></pre></td></tr></table></figure>\n\n<p>Tips：8081 端口用来公开访问 Web 界面，50000 端口允许访问远程 Java (JIRA) API。</p>\n<p>这里我使用了第二种方式启动了 一个 Jenkins 容器应用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run \\</span><br><span class=\"line\">  --name jenkins-blueocean \\</span><br><span class=\"line\">  -d \\</span><br><span class=\"line\">  -p 8080:8080 \\</span><br><span class=\"line\">  -p 50000:50000 \\ </span><br><span class=\"line\">  -v jenkins-data:&#x2F;var&#x2F;jenkins_home \\</span><br><span class=\"line\">  jenkinsci&#x2F;blueocean</span><br><span class=\"line\">93f88d6ca2129fae971298e98e20091570f6903463b203a9235660856f63020e</span><br></pre></td></tr></table></figure>\n\n<p>最后使用docker ps命令确认容器是否已经后台运行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker ps</span><br><span class=\"line\">CONTAINER ID        IMAGE                 COMMAND                  CREATED             STATUS              PORTS                                              NAMES</span><br><span class=\"line\">0cad9bbe76a6        jenkinsci&#x2F;blueocean   &quot;&#x2F;sbin&#x2F;tini -- &#x2F;usr&#x2F;…&quot;   About an hour ago   Up About an hour    0.0.0.0:8080-&gt;8080&#x2F;tcp, 0.0.0.0:50000-&gt;50000&#x2F;tcp   jenkins-blueocean</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置-Jenkins\"><a href=\"#配置-Jenkins\" class=\"headerlink\" title=\"配置 Jenkins\"></a>配置 Jenkins</h2><p>以上如果一切正常，现在就可以通过http://<ipaddress>:8080访问 Jenkins 的 Web 界面了。</p>\n<h3 id=\"Step1：解锁-Jenkins。\"><a href=\"#Step1：解锁-Jenkins。\" class=\"headerlink\" title=\"Step1：解锁 Jenkins。\"></a>Step1：解锁 Jenkins。</h3><p>Alt Text</p>\n<p>管理员初始密码被放到了/var/jenkins_home/secrets/initialAdminPassword 文件中。</p>\n<p>因为我们把 Jenkins 部署在了 Docker 容器中，因此需要先进入到容器，再去查看对应的文件initialAdminPassword内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker exec -it jenkins-blueocean &#x2F;bin&#x2F;bash</span><br><span class=\"line\">jenkins@93f88d6ca212:&#x2F;$ cat &#x2F;var&#x2F;jenkins_home&#x2F;secrets&#x2F;initialAdminPassword</span><br><span class=\"line\">a6f6d08fcc474178833001d1fc79be62</span><br></pre></td></tr></table></figure>\n\n<p>如上输出中，a6f6d08fcc474178833001d1fc79be62 便是我们需要的管理员密码，复制并粘贴到 Web 界面，点击继续即可解锁 Jenkins。</p>\n<h3 id=\"Step2：安装插件。\"><a href=\"#Step2：安装插件。\" class=\"headerlink\" title=\"Step2：安装插件。\"></a>Step2：安装插件。</h3><p>Jenkins 可以说完全由插件来驱动的，所以安装一些基础的插件是非要必要的，这里我们选择 安装推荐的插件 ，然后静静地等待插件安装完成即可。</p>\n<h3 id=\"Step3：创建用户。\"><a href=\"#Step3：创建用户。\" class=\"headerlink\" title=\"Step3：创建用户。\"></a>Step3：创建用户。</h3><p>接着继续下一步操作，提示需要创建一个新的用户，自行填写即可。</p>\n","raw":null,"categories":[{"name":"编程技术","path":"api/categories/编程技术.json"}],"tags":[{"name":"应用","path":"api/tags/应用.json"}]},{"title":"访问samba共享文件夹","slug":"tools/samba","date":"2019-11-03T12:13:11.000Z","updated":"2024-06-30T10:35:56.312Z","comments":true,"path":"api/articles/tools/samba.json","excerpt":null,"keywords":"云计算","cover":"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635177413Samba-Ubuntu-16.04.png","content":"<h3 id=\"whats-samba？\"><a href=\"#whats-samba？\" class=\"headerlink\" title=\"whats samba？\"></a>whats samba？</h3><p>Samba is the standard Windows interoperability suite of programs for Linux and Unix.</p>\n<h3 id=\"Use-in-linux\"><a href=\"#Use-in-linux\" class=\"headerlink\" title=\"Use in linux\"></a>Use in linux</h3><h3 id=\"Use-in-Windows\"><a href=\"#Use-in-Windows\" class=\"headerlink\" title=\"Use in Windows\"></a>Use in Windows</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount -t cifs //ip地址/path/to/share path/to/mount</span><br><span class=\"line\">: &lt;&lt;&#x27;COMMEN</span><br><span class=\"line\">mount：挂载命令</span><br><span class=\"line\">-t cifs： 用cifs文件系统挂载samba共享文件，如果提示错误的文件系统的话，可能是没有cifs，需要自己安装。【centos：</span><br><span class=\"line\">yum install nfs-utils】</span><br><span class=\"line\"></span><br><span class=\"line\">//ip地址/path/to/share：共享目录路径</span><br><span class=\"line\">path/to/mount：要挂载的路径，需要自己创建一个</span><br><span class=\"line\">COMMENT</span><br></pre></td></tr></table></figure>\n\n","raw":null,"categories":[{"name":"编程技术","path":"api/categories/编程技术.json"}],"tags":[{"name":"应用","path":"api/tags/应用.json"}]},{"title":"sysprep","slug":"tools/sysprep","date":"2019-10-24T13:11:19.000Z","updated":"2024-06-30T10:35:56.312Z","comments":true,"path":"api/articles/tools/sysprep.json","excerpt":null,"keywords":"云计算","cover":"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211026/1635177611R-C.cdb93bd02539a0afa1825bc392fdd063?rik=8V%2fE5FrphN%2fTUw&riu=http%3a%2f%2fimg.lszhang.com%2f2020%2f11%2fWIP-6th-anniversary-wallpaper-dark-scaled.jpg&ehk=yPsRXHZtQY4Q3ATUyhBqgtFSCtcbT3WcHoofri16xPc%3d&risl=&pid=ImgRaw&r=0","content":"<p>Sysprep程序是微软公司用来配置Microsoft Windows全新安装的一个工具，是为方便企业用户部署系统而设计的。</p>\n<h2 id=\"Sysprep使用\"><a href=\"#Sysprep使用\" class=\"headerlink\" title=\"Sysprep使用\"></a>Sysprep使用</h2><p>1、程序位置为：“C:\\Windows\\System32\\sysprep\\sysprep.exe”，也可以通过运行“sysprep”，打开sysprep.exe封装工具。<br><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635177540image_thumb-18.png\" alt=\"image\"><br><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635177545image_thumb-19.png\" alt=\"image\"><br><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635177553image_thumb-20.png\" alt=\"image\"></p>\n<p>2、运行sysprep.exe封装工具，打开后点击确定就可以进行封装。<br>如果勾选“通用”的话有什么作用？<br>如果勾选“通用”在初始化系统的时候后会多一个硬件和驱动重新识别和安装的过程。<br>一般是跨硬件进行操作系统迁移的时候才会勾选该按钮，就是让这次封装的系统能在其它不同硬件的计算机上运行。</p>\n<p>关机选项可以根据我们需求进行配置，如果设置为重新启动，封装完成后会自动进行重启。<br><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635177563image_thumb-21.png\" alt=\"image\"><br><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635177558image_thumb-22.png\" alt=\"image\"></p>\n<p>封装完成后就可以看到 欢迎界面了。</p>\n<p>封装完成后你的操作系统配置与数据是不丢失的，包括windows激活与防火墙配置等。</p>\n<h2 id=\"为什么要使用Sysprep作用\"><a href=\"#为什么要使用Sysprep作用\" class=\"headerlink\" title=\"为什么要使用Sysprep作用\"></a>为什么要使用Sysprep作用</h2><p>微软的操作系统很早就开始使用安全标识符（SID）对计算机和用户进行识别。在域控环境中，分配给计算机账号的叫 Machine SID，分配给用户账户的是用户账户 SID。处于工作组计算机的 SID 是由算法生成的，除特殊账户外，其它用户的 SID 也是由算法生成的；而域中各对象的 SID 是由域范围的 SID 和具有唯一性的相对标识符 (RID) 连接组成，RID 是在创建安全主体时由域中的 RID Master 分配的。RID Master 的作用是：分配可用 RID 池给域内的 DC 以及防止对象的 SID 重复。</p>\n<p>所以当你从一台主机克隆出多个 PC，或者使用同一虚拟机母板克隆出多台 VM 之后，其 SID 势必会相同，在加入域时会造成安全主体的识别混乱和加域失败等，通过Sysprep封装就可以解决该问题。</p>\n","raw":null,"categories":[{"name":"编程技术","path":"api/categories/编程技术.json"}],"tags":[{"name":"工具","path":"api/tags/工具.json"}]}]}
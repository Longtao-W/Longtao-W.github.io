{"name":"操作系统","postlist":[{"title":"简洁明了的systemd的使用","slug":"systemstructure/linux/systemd","date":"2021-09-06T15:20:21.000Z","updated":"2024-06-30T10:35:56.308Z","comments":true,"path":"api/articles/systemstructure/linux/systemd.json","excerpt":null,"keywords":"云计算","cover":"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20210923/systemd.11o5sef98c4w.png","content":"<h2 id=\"简述\"><a href=\"#简述\" class=\"headerlink\" title=\"简述\"></a>简述</h2><h3 id=\"背景：\"><a href=\"#背景：\" class=\"headerlink\" title=\"背景：\"></a>背景：</h3><p>在systemd之前使用initd 管理服务（把启动脚本放在在<code>/etc/init.d/</code>下），但是有两个主要缺点：</p>\n<ol>\n<li>线性(串行)启动导致启动时间过长</li>\n<li>initd只负责在系统启动时启动启动脚本，若要处理脚本状态需要自己实现，导致脚本复杂</li>\n</ol>\n<h3 id=\"systemd设计目标\"><a href=\"#systemd设计目标\" class=\"headerlink\" title=\"systemd设计目标\"></a>systemd设计目标</h3><ol>\n<li>为服务启动和管理提供全套解决方案</li>\n<li>可完全取代init.d ，性能更强，功能更多</li>\n</ol>\n<h2 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h2><h3 id=\"系统管理\"><a href=\"#系统管理\" class=\"headerlink\" title=\"系统管理\"></a>系统管理</h3><h4 id=\"综合-systemctl\"><a href=\"#综合-systemctl\" class=\"headerlink\" title=\"综合(systemctl))\"></a>综合(systemctl))</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">常用命令</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重启</span></span><br><span class=\"line\">systemctl reboot</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 关闭电源</span></span><br><span class=\"line\">systemctl poweroff</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> CPU暂停</span></span><br><span class=\"line\">systemctl halt</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 挂起</span></span><br><span class=\"line\">systemctl suspend</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"用户-loginctl\"><a href=\"#用户-loginctl\" class=\"headerlink\" title=\"用户(loginctl)\"></a>用户(loginctl)</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list-sessions            List sessions</span><br><span class=\"line\">session-status [ID...]   Show session status</span><br><span class=\"line\">show-session [ID...]     Show properties of sessions or the manager</span><br><span class=\"line\">activate [ID]            Activate a session</span><br><span class=\"line\">lock-session [ID...]     Screen lock one or more sessions</span><br><span class=\"line\">unlock-session [ID...]   Screen unlock one or more sessions</span><br><span class=\"line\">lock-sessions            Screen lock all current sessions</span><br><span class=\"line\">unlock-sessions          Screen unlock all current sessions</span><br><span class=\"line\">terminate-session ID...  Terminate one or more sessions</span><br><span class=\"line\">kill-session ID...       Send signal to processes of a session</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"时间-timedatectl\"><a href=\"#时间-timedatectl\" class=\"headerlink\" title=\"时间(timedatectl)\"></a>时间(timedatectl)</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">status                   Show current time settings</span><br><span class=\"line\">show                     Show properties of systemd-timedated</span><br><span class=\"line\">set-time TIME            Set system time</span><br><span class=\"line\">set-timezone ZONE        Set system time zone</span><br><span class=\"line\">list-timezones           Show known time zones</span><br><span class=\"line\">set-local-rtc BOOL       Control whether RTC is in local time</span><br><span class=\"line\">set-ntp BOOL             Enable or disable network time synchronization</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"本地化设置-localectl\"><a href=\"#本地化设置-localectl\" class=\"headerlink\" title=\"本地化设置(localectl)\"></a>本地化设置(localectl)</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">status                   Show current locale settings</span><br><span class=\"line\">set-locale LOCALE...     Set system locale</span><br><span class=\"line\">list-locales             Show known locales</span><br><span class=\"line\">set-keymap MAP [MAP]     Set console and X11 keyboard mappings</span><br><span class=\"line\">list-keymaps             Show known virtual console keyboard mappings</span><br><span class=\"line\">set-x11-keymap LAYOUT [MODEL [VARIANT [OPTIONS]]]</span><br><span class=\"line\">                         Set X11 and console keyboard mappings</span><br><span class=\"line\">list-x11-keymap-models   Show known X11 keyboard mapping models</span><br><span class=\"line\">list-x11-keymap-layouts  Show known X11 keyboard mapping layouts</span><br><span class=\"line\">list-x11-keymap-variants [LAYOUT]</span><br><span class=\"line\">                         Show known X11 keyboard mapping variants</span><br><span class=\"line\">list-x11-keymap-options  Show known X11 keyboard mapping options</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"启动信息-systemd-analyze\"><a href=\"#启动信息-systemd-analyze\" class=\"headerlink\" title=\"启动信息(systemd-analyze)\"></a>启动信息(systemd-analyze)</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">time                    Print time spent in the kernel</span><br><span class=\"line\">blame                   Print list of running units ordered by time to init</span><br><span class=\"line\">critical-chain          Print a tree of the time critical chain of units</span><br><span class=\"line\">plot                    Output SVG graphic showing service initialization</span><br><span class=\"line\">dot                     Output dependency graph in dot(1) format</span><br><span class=\"line\">set-log-level LEVEL     Set logging threshold for systemd</span><br><span class=\"line\">dump                    Output state serialization of service manager</span><br><span class=\"line\">verify FILE...          Check unit files for correctness</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"主机信息-hostnamectl\"><a href=\"#主机信息-hostnamectl\" class=\"headerlink\" title=\"主机信息(hostnamectl)\"></a>主机信息(hostnamectl)</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">status                 Show current hostname settings</span><br><span class=\"line\">set-hostname NAME      Set system hostname</span><br><span class=\"line\">set-icon-name NAME     Set icon name for host</span><br><span class=\"line\">set-chassis NAME       Set chassis type for host</span><br><span class=\"line\">set-deployment NAME    Set deployment environment for host</span><br><span class=\"line\">set-location NAME      Set location for host</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"资源管理\"><a href=\"#资源管理\" class=\"headerlink\" title=\"资源管理\"></a>资源管理</h3><h4 id=\"支持的资源\"><a href=\"#支持的资源\" class=\"headerlink\" title=\"支持的资源\"></a>支持的资源</h4><p>文件后缀就是资源名，例如service的后缀为.service</p>\n<table>\n<thead>\n<tr>\n<th>资源</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>service</td>\n<td>定义系统服务</td>\n</tr>\n<tr>\n<td>socket</td>\n<td>标识进程间通信使用的socket文件</td>\n</tr>\n<tr>\n<td>target</td>\n<td>模拟实现“运行级别”，多个 Unit 构成的一个组</td>\n</tr>\n<tr>\n<td>device</td>\n<td>定义内核识别的设备</td>\n</tr>\n<tr>\n<td>snapshot</td>\n<td>管理systemd快照</td>\n</tr>\n<tr>\n<td>scope</td>\n<td>非systemd启动的进程</td>\n</tr>\n<tr>\n<td>timer</td>\n<td>管理计划任务</td>\n</tr>\n<tr>\n<td>slice</td>\n<td>进程组</td>\n</tr>\n<tr>\n<td>path</td>\n<td>文件</td>\n</tr>\n<tr>\n<td>swap</td>\n<td>交换设备</td>\n</tr>\n<tr>\n<td>mount</td>\n<td>文件系统挂载点</td>\n</tr>\n<tr>\n<td>automount</td>\n<td>自动挂载点</td>\n</tr>\n</tbody></table>\n<h4 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">基础命令</span></span><br><span class=\"line\">systemctl status # 状态</span><br><span class=\"line\">systemctl start # 开启</span><br><span class=\"line\">syttemctl stop # 关闭</span><br><span class=\"line\">systemctl restart # 重启</span><br><span class=\"line\">systemctl reload # 重载</span><br><span class=\"line\">systemctl kill # 杀死</span><br><span class=\"line\">systemctl enable # 开机启动</span><br><span class=\"line\">systemctl disable # 开机不启动</span><br><span class=\"line\">systemctl mask # 屏蔽</span><br><span class=\"line\">systemctl unmask # 不屏蔽</span><br><span class=\"line\">systemctl show # 查看配置</span><br><span class=\"line\">systemctl cat # 查看配置文件内容</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查询命令</span></span><br><span class=\"line\">systemctl  is-active </span><br><span class=\"line\">systemctl is-failed</span><br><span class=\"line\">systemctl is-enabled</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 列出依赖</span></span><br><span class=\"line\">systemctl list-dependencies</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查询列表</span></span><br><span class=\"line\">list-sockets</span><br><span class=\"line\">list-unit-files    </span><br><span class=\"line\">list-jobs </span><br><span class=\"line\">list-timers </span><br><span class=\"line\">list-units </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"启动状态\"><a href=\"#启动状态\" class=\"headerlink\" title=\"启动状态\"></a>启动状态</h4><p>static：不可以自己启动，可以被被其它的 enabled 的服务来唤醒。<br>mask：屏蔽掉了，除非unmask否则无论如何无法启动<br>enable：开机启动<br>disable：开机不启动</p>\n<h4 id=\"日志管理\"><a href=\"#日志管理\" class=\"headerlink\" title=\"日志管理\"></a>日志管理</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-F --field=FIELD         List all values that a specified field takes</span><br><span class=\"line\">   --new-id128           Generate a new 128-bit ID</span><br><span class=\"line\">   --disk-usage          Show total disk usage of all journal files</span><br><span class=\"line\">   --vacuum-size=BYTES   Reduce disk usage below specified size</span><br><span class=\"line\">   --vacuum-time=TIME    Remove journal files older than specified date</span><br><span class=\"line\">   --flush               Flush all journal data from /run into /var</span><br><span class=\"line\">   --header              Show journal header information</span><br><span class=\"line\">   --list-catalog        Show all message IDs in the catalog</span><br><span class=\"line\">   --dump-catalog        Show entries in the message catalog</span><br><span class=\"line\">   --update-catalog      Update the message catalog database</span><br><span class=\"line\">   --setup-keys          Generate a new FSS key pair</span><br><span class=\"line\">   --verify              Verify journal file consistency</span><br><span class=\"line\">\t</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"怎么写一个Unit\"><a href=\"#怎么写一个Unit\" class=\"headerlink\" title=\"怎么写一个Unit\"></a>怎么写一个Unit</h4><p>最好的说明往往都是官网说明<a href=\"https://www.freedesktop.org/software/systemd/man/systemd.unit.html\">https://www.freedesktop.org/software/systemd/man/systemd.unit.html</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">属性=值</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">属性=值</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">属性=值</span><br></pre></td></tr></table></figure>\n\n<p>一般有 Unit(unit元数据)、Install(定义启动)、Service(配置)三个模块，很多情况下Install模块可省略</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description：简短描述</span><br><span class=\"line\">Documentation：文档地址</span><br><span class=\"line\">Requires：当前 Unit 依赖的其他 Unit，如果它们没有运行，当前 Unit 会启动失败</span><br><span class=\"line\">Wants：与当前 Unit 配合的其他 Unit，如果它们没有运行，当前 Unit 不会启动失败</span><br><span class=\"line\">BindsTo：与Requires类似，它指定的 Unit 如果退出，会导致当前 Unit 停止运行</span><br><span class=\"line\">Before：如果该字段指定的 Unit 也要启动，那么必须在当前 Unit 之后启动</span><br><span class=\"line\">After：如果该字段指定的 Unit 也要启动，那么必须在当前 Unit 之前启动</span><br><span class=\"line\">Conflicts：这里指定的 Unit 不能与当前 Unit 同时运行</span><br><span class=\"line\">Condition...：当前 Unit 运行必须满足的条件，否则不会运行</span><br><span class=\"line\">Assert...：当前 Unit 运行必须满足的条件，否则会报启动失败</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type：定义启动时的进程行为。它有以下几种值。</span><br><span class=\"line\">Type=simple：默认值，执行ExecStart指定的命令，启动主进程</span><br><span class=\"line\">Type=forking：以 fork 方式从父进程创建子进程，创建后父进程会立即退出</span><br><span class=\"line\">Type=oneshot：一次性进程，Systemd 会等当前服务退出，再继续往下执行</span><br><span class=\"line\">Type=dbus：当前服务通过D-Bus启动</span><br><span class=\"line\">Type=notify：当前服务启动完毕，会通知Systemd，再继续往下执行</span><br><span class=\"line\">Type=idle：若有其他任务执行完毕，当前服务才会运行</span><br><span class=\"line\">Workingdirectory: 工作目录</span><br><span class=\"line\">ExecStart：启动当前服务的命令</span><br><span class=\"line\">ExecStartPre：启动当前服务之前执行的命令</span><br><span class=\"line\">ExecStartPost：启动当前服务之后执行的命令</span><br><span class=\"line\">ExecReload：重启当前服务时执行的命令</span><br><span class=\"line\">ExecStop：停止当前服务时执行的命令</span><br><span class=\"line\">ExecStopPost：停止当其服务之后执行的命令</span><br><span class=\"line\">RestartSec：自动重启当前服务间隔的秒数</span><br><span class=\"line\">Restart：定义何种情况 Systemd 会自动重启当前服务，可能的值包括always（总是重启）、on-success、on-failure、on-abnormal、on-abort、on-watchdog</span><br><span class=\"line\">TimeoutSec：定义 Systemd 停止当前服务之前等待的秒数</span><br><span class=\"line\">Environment：指定环境变量</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy：它的值是一个或多个 Target，当前 Unit 激活时（enable）符号链接会放入/etc/systemd/system目录下面以 Target 名 + .wants后缀构成的子目录中</span><br><span class=\"line\">RequiredBy：它的值是一个或多个 Target，当前 Unit 激活时，符号链接会放入/etc/systemd/system目录下面以 Target 名 + .required后缀构成的子目录中</span><br><span class=\"line\">Alias：当前 Unit 可用于启动的别名</span><br><span class=\"line\">Also：当前 Unit 激活（enable）时，会被同时激活的其他 Unit</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"一个简单的例子\"><a href=\"#一个简单的例子\" class=\"headerlink\" title=\"一个简单的例子\"></a>一个简单的例子</h4><ol>\n<li><p>首先我们用c实现一个简单的http helloworld </p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/types.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/socket.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;netinet/in.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;arpa/inet.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PORT 2333</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> BUFFER_SIZE 2048</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> RESPONSE_HEADER <span class=\"meta-string\">&quot;HTTP/1.1 200 OK\\r\\nConnection: close\\r\\nAccept-Ranges: bytes\\r\\nContent-Type: text/html\\r\\n\\r\\n&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> RESPONSE_BODY <span class=\"meta-string\">&quot;Hello longtaoTechLife!&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">handle</span><span class=\"params\">(<span class=\"keyword\">int</span> conn)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> buffer[BUFFER_SIZE];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">    bzero(buffer, BUFFER_SIZE);</span><br><span class=\"line\">    len = recv(conn, buffer, BUFFER_SIZE, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (len &lt;= <span class=\"number\">0</span> ) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span> (<span class=\"string\">&quot;recv len not right&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;&#125;</span><br><span class=\"line\">    send(conn, RESPONSE_HEADER RESPONSE_BODY, <span class=\"keyword\">sizeof</span>(RESPONSE_HEADER RESPONSE_BODY), <span class=\"number\">0</span>);</span><br><span class=\"line\">    close(conn);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc,<span class=\"keyword\">char</span> *argv[])</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> port = PORT;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sockaddr_in</span> <span class=\"title\">clientSockAddr</span>;</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sockaddr_in</span> <span class=\"title\">serverSockAddr</span>;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> listener = socket(AF_INET,SOCK_STREAM,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> conn;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> optval = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">socklen_t</span> len = <span class=\"keyword\">sizeof</span>(struct sockaddr_in);</span><br><span class=\"line\">    setsockopt(listener, SOL_SOCKET, SO_REUSEADDR, &amp;optval, <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br><span class=\"line\">    serverSockAddr.sin_family = AF_INET;</span><br><span class=\"line\">    serverSockAddr.sin_port = htons(port);</span><br><span class=\"line\">    serverSockAddr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(bind(listener,(struct sockaddr *)&amp;serverSockAddr,<span class=\"keyword\">sizeof</span>(serverSockAddr))==<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;bind error!&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(listen(listener, <span class=\"number\">10</span>) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;listen failed!&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    conn = accept(listener, (struct sockaddr*)&amp;clientSockAddr, &amp;len);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(conn &lt; <span class=\"number\">0</span> || handle(conn) &lt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        close(conn);</span><br><span class=\"line\">        <span class=\"keyword\">continue</span>;&#125;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>我们试一下正常运行,打印了我们期望的</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@172-20-59-110 ~]# ./hello.server&amp;</span><br><span class=\"line\">[1] 1460</span><br><span class=\"line\">[root@172-20-59-110 ~]# curl -X GET localhost:2333</span><br><span class=\"line\">Hello longtaoTechLife![root@172-20-59-110 ~]# </span><br></pre></td></tr></table></figure></li>\n<li><p>接下来我们写一个简单的systemd service 写入/etc/systemd/system/hello.service</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=this is longtao&#x27;s hello test</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">ExecStart=/root/hello.server #注意一定要写成绝对地址</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target # 缺少此项无法使用systemctl enable/disable 功能</span><br></pre></td></tr></table></figure></li>\n<li><p>我们用systemctl status hello看一下状态</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@172-20-59-110 ~]# systemctl status hello</span><br><span class=\"line\">● hello.service - this is longtao&#x27;s hello test</span><br><span class=\"line\">   Loaded: loaded (/etc/systemd/system/hello.service; static; vendor preset: disabled) #配置文件路径，是否enable等</span><br><span class=\"line\">   Active: inactive (dead) since 四 2021-07-15 18:14:23 CST; 18s ago # 运行状态，我们能看到未运行</span><br><span class=\"line\">  Process: 708 ExecStart=/root/hello.server </span><br><span class=\"line\"> Main PID: 708 (code=killed, signal=TERM) # 显示进程ID</span><br></pre></td></tr></table></figure></li>\n<li><p>我们启动服务systemctl status hello并打开开机启动 systemctl status hello，再看一下状态</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">● hello.service - this is longtao&#x27;s hello test</span><br><span class=\"line\">   Loaded: loaded (/etc/systemd/system/hello.service; enabled; vendor preset: disabled) # 我们看到状态enbale开机启动设置成功了</span><br><span class=\"line\">   Active: active (running) since 四 2021-07-15 18:18:25 CST; 26s ago #运行状态为正在运行</span><br><span class=\"line\"> Main PID: 1328 (hello.server)</span><br><span class=\"line\">   CGroup: /system.slice/hello.service   #CGroup下显示所有孜进程，CGroup常用于隔离资源，容器中常用，我们以后再说</span><br><span class=\"line\">           └─1328 /root/hello.server </span><br></pre></td></tr></table></figure></li>\n<li><p>这样我们就实现了一个简单的service，可以快乐的使用systemctl restart\\stop\\等管理我们的服务了。</p>\n</li>\n</ol>\n<h2 id=\"优点-好的特性\"><a href=\"#优点-好的特性\" class=\"headerlink\" title=\"优点(好的特性)\"></a>优点(好的特性)</h2><ol>\n<li>功能强大，使用便捷</li>\n<li>启动速度快</li>\n</ol>\n<h2 id=\"特点-中性特性\"><a href=\"#特点-中性特性\" class=\"headerlink\" title=\"特点(中性特性)\"></a>特点(中性特性)</h2><ol>\n<li>systemd 取代了initd，成为了系统第一个进程(PID为1)</li>\n</ol>\n<h2 id=\"缺点-不好的特性\"><a href=\"#缺点-不好的特性\" class=\"headerlink\" title=\"缺点(不好的特性)\"></a>缺点(不好的特性)</h2><ol>\n<li>体系庞大，使用起来非常复杂</li>\n<li>与操作系统的其他模块耦合性过强，不符合Unix的KISS原则，下面是systemd架构图，可以看出需要很多模块支持<br><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211027/1635309214webp\" alt=\"img\"></li>\n</ol>\n","raw":null,"categories":[{"name":"编程技术","path":"api/categories/编程技术.json"}],"tags":[{"name":"linux","path":"api/tags/linux.json"},{"name":"操作系统","path":"api/tags/操作系统.json"}]}]}
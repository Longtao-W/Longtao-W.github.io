{"title":"中断","slug":"systemstructure/linux/iterruptrequest","date":"2020-05-05T12:28:43.000Z","updated":"2024-06-30T10:35:56.308Z","comments":true,"path":"api/articles/systemstructure/linux/iterruptrequest.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635139455kernel_interface.png"],"content":"<h2 id=\"中断是什么\"><a href=\"#中断是什么\" class=\"headerlink\" title=\"中断是什么\"></a>中断是什么</h2><p>中断是操作系统、CPU、CPU与IO设备中的概念，为中断CPU执行。其中涉及的概念都有无限深的概念栈(其实是无限深)我们就从简单的系统层面讲一讲。</p>\n<p><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635139455kernel_interface.png\" alt=\"See the source image\"></p>\n<h2 id=\"前置概念\"><a href=\"#前置概念\" class=\"headerlink\" title=\"前置概念\"></a>前置概念</h2><p>IRQ：interrupt request,中断请求</p>\n<p>ISR：interrupt service routine， 中断服务程序，中断后运行的服务，ISR运行结束才会结束中断</p>\n<p>PIC：programmable interrupt contolle,可编程中断控制器（中断控制芯片），与I/O设备直连，可以触发CPU的INTR(中断请求)引脚，发起中断请求</p>\n<p>APIC：advanced programmable interrupt contolle,高级编程中断控制器，有两部分，Local APIC 在CPU内部(每个核都有)，I/O APIC在主板芯片组内，I/O APIC和LAPIC通过总线连接</p>\n<h2 id=\"硬中断\"><a href=\"#硬中断\" class=\"headerlink\" title=\"硬中断\"></a>硬中断</h2><p>硬件设备通知CPU就绪中使用，分为：</p>\n<h3 id=\"可屏蔽中断\"><a href=\"#可屏蔽中断\" class=\"headerlink\" title=\"可屏蔽中断\"></a>可屏蔽中断</h3><p>外设或借口的中断、可以在CPU处理其他紧急操作时忽略或屏蔽</p>\n<h3 id=\"不可屏蔽中断\"><a href=\"#不可屏蔽中断\" class=\"headerlink\" title=\"不可屏蔽中断\"></a>不可屏蔽中断</h3><p>电源断电、内存错误等，不可通过软件屏蔽，必须响应中断</p>\n<h2 id=\"软中断\"><a href=\"#软中断\" class=\"headerlink\" title=\"软中断\"></a>软中断</h2><p>软件触发的中断，如定时器、网卡收发包</p>\n<h2 id=\"异常\"><a href=\"#异常\" class=\"headerlink\" title=\"异常\"></a>异常</h2><p>一般为程序调用CPU的指令错误时产生，console能看到 segmention fault、core dumped等</p>\n<p>错误：系统可纠正、纠正成功继续运行(如内存页从磁盘加载)</p>\n<p>陷阱：陷阱主要用在调试中。</p>\n<p>终止：终止是由系统表中的硬件错误或值不一致而导致的。终止不会报告造成异常的指令的所在位置。这是最严重的中断，终止将会调用系统的终止异常处理程序来结束造成异常的进程。</p>\n<h2 id=\"top命令解析\"><a href=\"#top命令解析\" class=\"headerlink\" title=\"top命令解析\"></a>top命令解析</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">top - 10:40:48 up  1:04,  1 user,  load average: 2.39, 2.22, 2.07</span><br><span class=\"line\">任务: 400 total,   2 running, 397 sleeping,   0 stopped,   1 zombie</span><br><span class=\"line\">%Cpu(s):  5.2 us,  3.4 sy,  0.0 ni, 90.5 id,  0.1 wa,  0.0 hi,  0.8 si,  0.0 st</span><br><span class=\"line\">MiB Mem :  15430.3 total,   3579.7 free,   8020.7 used,   3829.9 buff/cache</span><br><span class=\"line\">MiB Swap:   2048.0 total,   2048.0 free,      0.0 used.   6880.5 avail Mem </span><br><span class=\"line\">ID USER      PR  NI    VIRT    RES    SHR    %CPU  %MEM     TIME+ COMMAND  </span><br><span class=\"line\">4389 longtao   20   0 6273452 451044 148220 S  37.7   2.9  27:28.46 gnome-shell           </span><br></pre></td></tr></table></figure>\n\n<p>第一行分别为：系统时间、系统已运行时间(1h4min)、用户数、平均CPU负载情况(1分钟、5分钟、15分钟)</p>\n<p>第二行分别为：当前总任务(进程)数量、运行中的2个、休眠397个、stoped0个，zombie0个</p>\n<p>第三为cpu的状态使用情况</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>5.2 us</td>\n<td>用户空间占用CPU%5.2</td>\n</tr>\n<tr>\n<td>3.4 sy</td>\n<td>内核空间占用CPU%3.4</td>\n</tr>\n<tr>\n<td>0.0 ni</td>\n<td>更改过优先级的进程占用CPU%0</td>\n</tr>\n<tr>\n<td>90.5 id</td>\n<td>90.5%的CPU空闲</td>\n</tr>\n<tr>\n<td>0.1 wa</td>\n<td>IO等待占用CPU百分比</td>\n</tr>\n<tr>\n<td>0.8 si</td>\n<td>软中断占用CPU%0.8</td>\n</tr>\n<tr>\n<td>0.0 hi</td>\n<td>硬中断占用</td>\n</tr>\n<tr>\n<td>0.0 st</td>\n<td>steal time,对云主机来说被Hypervisor偷去的CPU所占比例</td>\n</tr>\n</tbody></table>\n<p>第四行为内存状态分别为：物理总内存total、used使用了的、free空闲的、缓存内存</p>\n<p>第五行为swap交换分区状态：total交换分区总量、空闲、使用了的、缓冲的</p>\n<p>第六行往下都是每个进程使用情况：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID</td>\n<td>进程号</td>\n</tr>\n<tr>\n<td>USER</td>\n<td>用户</td>\n</tr>\n<tr>\n<td>PR</td>\n<td>进程优先级</td>\n</tr>\n<tr>\n<td>NI</td>\n<td>nice值，正表示低优先值、负表示高</td>\n</tr>\n<tr>\n<td>VIRT</td>\n<td>进程使用虚拟内存总量，VIRT=SWAP+RES</td>\n</tr>\n<tr>\n<td>RES</td>\n<td>进程使用的、未释放的物理内存，RES=CODE+DATA</td>\n</tr>\n<tr>\n<td>SHR</td>\n<td>共享内存</td>\n</tr>\n<tr>\n<td>S</td>\n<td>进程状态，D不可中断的睡眠状态 R运行 S睡眠 T跟踪/停止 Z僵尸进程</td>\n</tr>\n<tr>\n<td>%CPU</td>\n<td>CPU占比(对单个CPU的)</td>\n</tr>\n<tr>\n<td>%MEM</td>\n<td>物理内存占比</td>\n</tr>\n<tr>\n<td>TIME+</td>\n<td>进程使用的CPU时间总计，单位为us</td>\n</tr>\n<tr>\n<td>COMMAND</td>\n<td>进程名称和命令</td>\n</tr>\n</tbody></table>\n<h3 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h3><p>数字1：查看每个cpu的情况</p>\n<p>数字2：查看每个numa的情况</p>\n<p>数字3：查看某个numa里每个CPU的情况</p>\n<p>字母P：CPU使用排序</p>\n<p>字母M：内存使用排序</p>\n<p>字母m：改变内存和交换区显示</p>\n<p>字母b：高亮运行太进程</p>\n<p>字母f：编排显示</p>\n","more":"<h2 id=\"中断是什么\"><a href=\"#中断是什么\" class=\"headerlink\" title=\"中断是什么\"></a>中断是什么</h2><p>中断是操作系统、CPU、CPU与IO设备中的概念，为中断CPU执行。其中涉及的概念都有无限深的概念栈(其实是无限深)我们就从简单的系统层面讲一讲。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Longtao-W/pics@main/20211025/1635139455kernel_interface.png\" alt=\"See the source image\"></p>\n<h2 id=\"前置概念\"><a href=\"#前置概念\" class=\"headerlink\" title=\"前置概念\"></a>前置概念</h2><p>IRQ：interrupt request,中断请求</p>\n<p>ISR：interrupt service routine， 中断服务程序，中断后运行的服务，ISR运行结束才会结束中断</p>\n<p>PIC：programmable interrupt contolle,可编程中断控制器（中断控制芯片），与I/O设备直连，可以触发CPU的INTR(中断请求)引脚，发起中断请求</p>\n<p>APIC：advanced programmable interrupt contolle,高级编程中断控制器，有两部分，Local APIC 在CPU内部(每个核都有)，I/O APIC在主板芯片组内，I/O APIC和LAPIC通过总线连接</p>\n<h2 id=\"硬中断\"><a href=\"#硬中断\" class=\"headerlink\" title=\"硬中断\"></a>硬中断</h2><p>硬件设备通知CPU就绪中使用，分为：</p>\n<h3 id=\"可屏蔽中断\"><a href=\"#可屏蔽中断\" class=\"headerlink\" title=\"可屏蔽中断\"></a>可屏蔽中断</h3><p>外设或借口的中断、可以在CPU处理其他紧急操作时忽略或屏蔽</p>\n<h3 id=\"不可屏蔽中断\"><a href=\"#不可屏蔽中断\" class=\"headerlink\" title=\"不可屏蔽中断\"></a>不可屏蔽中断</h3><p>电源断电、内存错误等，不可通过软件屏蔽，必须响应中断</p>\n<h2 id=\"软中断\"><a href=\"#软中断\" class=\"headerlink\" title=\"软中断\"></a>软中断</h2><p>软件触发的中断，如定时器、网卡收发包</p>\n<h2 id=\"异常\"><a href=\"#异常\" class=\"headerlink\" title=\"异常\"></a>异常</h2><p>一般为程序调用CPU的指令错误时产生，console能看到 segmention fault、core dumped等</p>\n<p>错误：系统可纠正、纠正成功继续运行(如内存页从磁盘加载)</p>\n<p>陷阱：陷阱主要用在调试中。</p>\n<p>终止：终止是由系统表中的硬件错误或值不一致而导致的。终止不会报告造成异常的指令的所在位置。这是最严重的中断，终止将会调用系统的终止异常处理程序来结束造成异常的进程。</p>\n<h2 id=\"top命令解析\"><a href=\"#top命令解析\" class=\"headerlink\" title=\"top命令解析\"></a>top命令解析</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">top - 10:40:48 up  1:04,  1 user,  load average: 2.39, 2.22, 2.07</span><br><span class=\"line\">任务: 400 total,   2 running, 397 sleeping,   0 stopped,   1 zombie</span><br><span class=\"line\">%Cpu(s):  5.2 us,  3.4 sy,  0.0 ni, 90.5 id,  0.1 wa,  0.0 hi,  0.8 si,  0.0 st</span><br><span class=\"line\">MiB Mem :  15430.3 total,   3579.7 free,   8020.7 used,   3829.9 buff/cache</span><br><span class=\"line\">MiB Swap:   2048.0 total,   2048.0 free,      0.0 used.   6880.5 avail Mem </span><br><span class=\"line\">ID USER      PR  NI    VIRT    RES    SHR    %CPU  %MEM     TIME+ COMMAND  </span><br><span class=\"line\">4389 longtao   20   0 6273452 451044 148220 S  37.7   2.9  27:28.46 gnome-shell           </span><br></pre></td></tr></table></figure>\n\n<p>第一行分别为：系统时间、系统已运行时间(1h4min)、用户数、平均CPU负载情况(1分钟、5分钟、15分钟)</p>\n<p>第二行分别为：当前总任务(进程)数量、运行中的2个、休眠397个、stoped0个，zombie0个</p>\n<p>第三为cpu的状态使用情况</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>5.2 us</td>\n<td>用户空间占用CPU%5.2</td>\n</tr>\n<tr>\n<td>3.4 sy</td>\n<td>内核空间占用CPU%3.4</td>\n</tr>\n<tr>\n<td>0.0 ni</td>\n<td>更改过优先级的进程占用CPU%0</td>\n</tr>\n<tr>\n<td>90.5 id</td>\n<td>90.5%的CPU空闲</td>\n</tr>\n<tr>\n<td>0.1 wa</td>\n<td>IO等待占用CPU百分比</td>\n</tr>\n<tr>\n<td>0.8 si</td>\n<td>软中断占用CPU%0.8</td>\n</tr>\n<tr>\n<td>0.0 hi</td>\n<td>硬中断占用</td>\n</tr>\n<tr>\n<td>0.0 st</td>\n<td>steal time,对云主机来说被Hypervisor偷去的CPU所占比例</td>\n</tr>\n</tbody></table>\n<p>第四行为内存状态分别为：物理总内存total、used使用了的、free空闲的、缓存内存</p>\n<p>第五行为swap交换分区状态：total交换分区总量、空闲、使用了的、缓冲的</p>\n<p>第六行往下都是每个进程使用情况：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID</td>\n<td>进程号</td>\n</tr>\n<tr>\n<td>USER</td>\n<td>用户</td>\n</tr>\n<tr>\n<td>PR</td>\n<td>进程优先级</td>\n</tr>\n<tr>\n<td>NI</td>\n<td>nice值，正表示低优先值、负表示高</td>\n</tr>\n<tr>\n<td>VIRT</td>\n<td>进程使用虚拟内存总量，VIRT=SWAP+RES</td>\n</tr>\n<tr>\n<td>RES</td>\n<td>进程使用的、未释放的物理内存，RES=CODE+DATA</td>\n</tr>\n<tr>\n<td>SHR</td>\n<td>共享内存</td>\n</tr>\n<tr>\n<td>S</td>\n<td>进程状态，D不可中断的睡眠状态 R运行 S睡眠 T跟踪/停止 Z僵尸进程</td>\n</tr>\n<tr>\n<td>%CPU</td>\n<td>CPU占比(对单个CPU的)</td>\n</tr>\n<tr>\n<td>%MEM</td>\n<td>物理内存占比</td>\n</tr>\n<tr>\n<td>TIME+</td>\n<td>进程使用的CPU时间总计，单位为us</td>\n</tr>\n<tr>\n<td>COMMAND</td>\n<td>进程名称和命令</td>\n</tr>\n</tbody></table>\n<h3 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h3><p>数字1：查看每个cpu的情况</p>\n<p>数字2：查看每个numa的情况</p>\n<p>数字3：查看某个numa里每个CPU的情况</p>\n<p>字母P：CPU使用排序</p>\n<p>字母M：内存使用排序</p>\n<p>字母m：改变内存和交换区显示</p>\n<p>字母b：高亮运行太进程</p>\n<p>字母f：编排显示</p>\n","categories":[{"name":"编程技术","path":"api/categories/编程技术.json"}],"tags":[{"name":"编程原理","path":"api/tags/编程原理.json"},{"name":"linux","path":"api/tags/linux.json"}]}
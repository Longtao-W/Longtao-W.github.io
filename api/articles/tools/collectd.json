{"title":"collectd后台监控程序","slug":"tools/collectd","date":"2021-11-21T10:20:21.000Z","updated":"2024-06-30T10:35:56.308Z","comments":true,"path":"api/articles/tools/collectd.json","excerpt":null,"covers":null,"content":"<p>[toc]</p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>collectd 是一个后台监控程序，用来采集其所运行系统上的系统信息，并提供各种存储方式来存储为不同值的格式，例如 RRD 文件形式、文本格式、MongoDB 等等</p>\n<p><strong>连接</strong>：<a href=\"https://collectd.org/index.shtml\">官网文档</a>、<a href=\"https://collectd.org/download.shtml\">下载地址</a>、<a href=\"https://github.com/collectd/collectd\">源码地址</a></p>\n<h2 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h2><ol>\n<li>C语言编写，性能好，跨平台能力强</li>\n<li>插件丰富，方便扩充</li>\n</ol>\n<h2 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h2><ol>\n<li>监控简单</li>\n<li>不能直接生成图形</li>\n</ol>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>修改<code>sudo vim /opt/collectd/etc/collectd.conf</code>选择自己需要的插件</p>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><p><code>systemctl start collectd</code> 启动服务</p>\n<h3 id=\"查看数据\"><a href=\"#查看数据\" class=\"headerlink\" title=\"查看数据\"></a>查看数据</h3><p>若开启了<code>rrdtool</code>插件就可在<code>/var/lib/collectd/rrd/</code>目录下看到相应的统计数据</p>\n<p>日志存储在<code>/var/log/syslog</code></p>\n<h2 id=\"主要插件\"><a href=\"#主要插件\" class=\"headerlink\" title=\"主要插件\"></a>主要插件</h2><h3 id=\"virt\"><a href=\"#virt\" class=\"headerlink\" title=\"virt\"></a>virt</h3><h4 id=\"vcpu\"><a href=\"#vcpu\" class=\"headerlink\" title=\"vcpu\"></a>vcpu</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">get_vcpu_stats</span><span class=\"params\">(virDomainPtr domain, <span class=\"keyword\">unsigned</span> <span class=\"keyword\">short</span> nr_virt_cpu)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> max_cpus = VIR_NODEINFO_MAXCPUS(nodeinfo);</span><br><span class=\"line\"></span><br><span class=\"line\">  virVcpuInfoPtr vinfo = <span class=\"built_in\">calloc</span>(nr_virt_cpu, <span class=\"keyword\">sizeof</span>(*vinfo));</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (vinfo == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">    ERROR(PLUGIN_NAME <span class=\"string\">&quot; plugin: calloc failed.&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">int</span> cpu_map_len = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> <span class=\"keyword\">char</span> *cpumaps = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (extra_stats &amp; ex_stats_vcpupin) &#123;</span><br><span class=\"line\">    cpu_map_len = VIR_CPU_MAPLEN(max_cpus);</span><br><span class=\"line\">    cpumaps = <span class=\"built_in\">calloc</span>(nr_virt_cpu, cpu_map_len);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (cpumaps == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">      ERROR(PLUGIN_NAME <span class=\"string\">&quot; plugin: calloc failed.&quot;</span>);</span><br><span class=\"line\">      sfree(vinfo);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">int</span> status =</span><br><span class=\"line\">      virDomainGetVcpus(domain, vinfo, nr_virt_cpu, cpumaps, cpu_map_len);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (status &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    ERROR(PLUGIN_NAME <span class=\"string\">&quot; plugin: virDomainGetVcpus failed with status %i.&quot;</span>,</span><br><span class=\"line\">          status);</span><br><span class=\"line\"></span><br><span class=\"line\">    virErrorPtr err = virGetLastError();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err-&gt;code == VIR_ERR_NO_SUPPORT) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (extra_stats &amp; ex_stats_vcpu)</span><br><span class=\"line\">        ERROR(PLUGIN_NAME</span><br><span class=\"line\">              <span class=\"string\">&quot; plugin: Disabled unsupported ExtraStats selector: vcpu&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (extra_stats &amp; ex_stats_vcpupin)</span><br><span class=\"line\">        ERROR(PLUGIN_NAME</span><br><span class=\"line\">              <span class=\"string\">&quot; plugin: Disabled unsupported ExtraStats selector: vcpupin&quot;</span>);</span><br><span class=\"line\">      extra_stats &amp;= ~(ex_stats_vcpu | ex_stats_vcpupin);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    sfree(cpumaps);</span><br><span class=\"line\">    sfree(vinfo);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nr_virt_cpu; ++i) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (extra_stats &amp; ex_stats_vcpu)</span><br><span class=\"line\">      vcpu_submit(vinfo[i].cpuTime, domain, vinfo[i].number, <span class=\"string\">&quot;virt_vcpu&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (extra_stats &amp; ex_stats_vcpupin)</span><br><span class=\"line\">      vcpu_pin_submit(domain, max_cpus, i, cpumaps, cpu_map_len);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  sfree(cpumaps);</span><br><span class=\"line\">  sfree(vinfo);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">vcpu_submit</span><span class=\"params\">(<span class=\"keyword\">derive_t</span> value, virDomainPtr dom, <span class=\"keyword\">int</span> vcpu_nr,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                        <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *type)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> type_instance[DATA_MAX_NAME_LEN];</span><br><span class=\"line\"></span><br><span class=\"line\">  ssnprintf(type_instance, <span class=\"keyword\">sizeof</span>(type_instance), <span class=\"string\">&quot;%d&quot;</span>, vcpu_nr);</span><br><span class=\"line\">  submit(dom, type, type_instance, &amp;(<span class=\"keyword\">value_t</span>)&#123;.derive = value&#125;, <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">submit</span><span class=\"params\">(virDomainPtr dom, <span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *type,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                   <span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *type_instance, <span class=\"keyword\">value_t</span> *values,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                   <span class=\"keyword\">size_t</span> values_len)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">value_list_t</span> vl = VALUE_LIST_INIT;</span><br><span class=\"line\">  init_value_list(&amp;vl, dom);</span><br><span class=\"line\"></span><br><span class=\"line\">  vl.values = values;</span><br><span class=\"line\">  vl.values_len = values_len;</span><br><span class=\"line\"></span><br><span class=\"line\">  sstrncpy(vl.type, type, <span class=\"keyword\">sizeof</span>(vl.type));</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (type_instance != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    sstrncpy(vl.type_instance, type_instance, <span class=\"keyword\">sizeof</span>(vl.type_instance));</span><br><span class=\"line\"></span><br><span class=\"line\">  plugin_dispatch_values(&amp;vl);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>CPU时间是指中央处理器（CPU）用于执行特定进程或线程的时间量</p>\n<p>虚拟机使用的CPU时间除以宿主机的总CPU时间</p>\n<p>总CPU时间分为用户空间时间、内核空间时间、空闲时间等</p>\n<h3 id=\"cpu\"><a href=\"#cpu\" class=\"headerlink\" title=\"cpu\"></a>cpu</h3><h2 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h2><p>idle的时候cpu在做什么？</p>\n<ol>\n<li>节能：一些现代操作系统和处理器支持节能功能，当 CPU 处于空闲状态时，可以降低 CPU 的频率或进入低功耗模式，以节省能源和降低发热。</li>\n<li>调度决策：操作系统可以使用空闲时间来评估当前的任务队列，并决定下一个要执行的任务，以优化系统的性能和响应能力。</li>\n<li>维护任务：操作系统可以利用空闲时间来执行一些后台维护任务，如内存回收、文件系统清理等。</li>\n</ol>\n","more":"<p>[toc]</p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>collectd 是一个后台监控程序，用来采集其所运行系统上的系统信息，并提供各种存储方式来存储为不同值的格式，例如 RRD 文件形式、文本格式、MongoDB 等等</p>\n<p><strong>连接</strong>：<a href=\"https://collectd.org/index.shtml\">官网文档</a>、<a href=\"https://collectd.org/download.shtml\">下载地址</a>、<a href=\"https://github.com/collectd/collectd\">源码地址</a></p>\n<h2 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h2><ol>\n<li>C语言编写，性能好，跨平台能力强</li>\n<li>插件丰富，方便扩充</li>\n</ol>\n<h2 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h2><ol>\n<li>监控简单</li>\n<li>不能直接生成图形</li>\n</ol>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>修改<code>sudo vim /opt/collectd/etc/collectd.conf</code>选择自己需要的插件</p>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><p><code>systemctl start collectd</code> 启动服务</p>\n<h3 id=\"查看数据\"><a href=\"#查看数据\" class=\"headerlink\" title=\"查看数据\"></a>查看数据</h3><p>若开启了<code>rrdtool</code>插件就可在<code>/var/lib/collectd/rrd/</code>目录下看到相应的统计数据</p>\n<p>日志存储在<code>/var/log/syslog</code></p>\n<h2 id=\"主要插件\"><a href=\"#主要插件\" class=\"headerlink\" title=\"主要插件\"></a>主要插件</h2><h3 id=\"virt\"><a href=\"#virt\" class=\"headerlink\" title=\"virt\"></a>virt</h3><h4 id=\"vcpu\"><a href=\"#vcpu\" class=\"headerlink\" title=\"vcpu\"></a>vcpu</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">get_vcpu_stats</span><span class=\"params\">(virDomainPtr domain, <span class=\"keyword\">unsigned</span> <span class=\"keyword\">short</span> nr_virt_cpu)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> max_cpus = VIR_NODEINFO_MAXCPUS(nodeinfo);</span><br><span class=\"line\"></span><br><span class=\"line\">  virVcpuInfoPtr vinfo = <span class=\"built_in\">calloc</span>(nr_virt_cpu, <span class=\"keyword\">sizeof</span>(*vinfo));</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (vinfo == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">    ERROR(PLUGIN_NAME <span class=\"string\">&quot; plugin: calloc failed.&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">int</span> cpu_map_len = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> <span class=\"keyword\">char</span> *cpumaps = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (extra_stats &amp; ex_stats_vcpupin) &#123;</span><br><span class=\"line\">    cpu_map_len = VIR_CPU_MAPLEN(max_cpus);</span><br><span class=\"line\">    cpumaps = <span class=\"built_in\">calloc</span>(nr_virt_cpu, cpu_map_len);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (cpumaps == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">      ERROR(PLUGIN_NAME <span class=\"string\">&quot; plugin: calloc failed.&quot;</span>);</span><br><span class=\"line\">      sfree(vinfo);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">int</span> status =</span><br><span class=\"line\">      virDomainGetVcpus(domain, vinfo, nr_virt_cpu, cpumaps, cpu_map_len);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (status &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    ERROR(PLUGIN_NAME <span class=\"string\">&quot; plugin: virDomainGetVcpus failed with status %i.&quot;</span>,</span><br><span class=\"line\">          status);</span><br><span class=\"line\"></span><br><span class=\"line\">    virErrorPtr err = virGetLastError();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err-&gt;code == VIR_ERR_NO_SUPPORT) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (extra_stats &amp; ex_stats_vcpu)</span><br><span class=\"line\">        ERROR(PLUGIN_NAME</span><br><span class=\"line\">              <span class=\"string\">&quot; plugin: Disabled unsupported ExtraStats selector: vcpu&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (extra_stats &amp; ex_stats_vcpupin)</span><br><span class=\"line\">        ERROR(PLUGIN_NAME</span><br><span class=\"line\">              <span class=\"string\">&quot; plugin: Disabled unsupported ExtraStats selector: vcpupin&quot;</span>);</span><br><span class=\"line\">      extra_stats &amp;= ~(ex_stats_vcpu | ex_stats_vcpupin);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    sfree(cpumaps);</span><br><span class=\"line\">    sfree(vinfo);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nr_virt_cpu; ++i) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (extra_stats &amp; ex_stats_vcpu)</span><br><span class=\"line\">      vcpu_submit(vinfo[i].cpuTime, domain, vinfo[i].number, <span class=\"string\">&quot;virt_vcpu&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (extra_stats &amp; ex_stats_vcpupin)</span><br><span class=\"line\">      vcpu_pin_submit(domain, max_cpus, i, cpumaps, cpu_map_len);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  sfree(cpumaps);</span><br><span class=\"line\">  sfree(vinfo);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">vcpu_submit</span><span class=\"params\">(<span class=\"keyword\">derive_t</span> value, virDomainPtr dom, <span class=\"keyword\">int</span> vcpu_nr,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                        <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *type)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> type_instance[DATA_MAX_NAME_LEN];</span><br><span class=\"line\"></span><br><span class=\"line\">  ssnprintf(type_instance, <span class=\"keyword\">sizeof</span>(type_instance), <span class=\"string\">&quot;%d&quot;</span>, vcpu_nr);</span><br><span class=\"line\">  submit(dom, type, type_instance, &amp;(<span class=\"keyword\">value_t</span>)&#123;.derive = value&#125;, <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">submit</span><span class=\"params\">(virDomainPtr dom, <span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *type,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                   <span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *type_instance, <span class=\"keyword\">value_t</span> *values,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                   <span class=\"keyword\">size_t</span> values_len)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">value_list_t</span> vl = VALUE_LIST_INIT;</span><br><span class=\"line\">  init_value_list(&amp;vl, dom);</span><br><span class=\"line\"></span><br><span class=\"line\">  vl.values = values;</span><br><span class=\"line\">  vl.values_len = values_len;</span><br><span class=\"line\"></span><br><span class=\"line\">  sstrncpy(vl.type, type, <span class=\"keyword\">sizeof</span>(vl.type));</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (type_instance != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    sstrncpy(vl.type_instance, type_instance, <span class=\"keyword\">sizeof</span>(vl.type_instance));</span><br><span class=\"line\"></span><br><span class=\"line\">  plugin_dispatch_values(&amp;vl);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>CPU时间是指中央处理器（CPU）用于执行特定进程或线程的时间量</p>\n<p>虚拟机使用的CPU时间除以宿主机的总CPU时间</p>\n<p>总CPU时间分为用户空间时间、内核空间时间、空闲时间等</p>\n<h3 id=\"cpu\"><a href=\"#cpu\" class=\"headerlink\" title=\"cpu\"></a>cpu</h3><h2 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h2><p>idle的时候cpu在做什么？</p>\n<ol>\n<li>节能：一些现代操作系统和处理器支持节能功能，当 CPU 处于空闲状态时，可以降低 CPU 的频率或进入低功耗模式，以节省能源和降低发热。</li>\n<li>调度决策：操作系统可以使用空闲时间来评估当前的任务队列，并决定下一个要执行的任务，以优化系统的性能和响应能力。</li>\n<li>维护任务：操作系统可以利用空闲时间来执行一些后台维护任务，如内存回收、文件系统清理等。</li>\n</ol>\n","categories":[{"name":"编程技术","path":"api/categories/编程技术.json"}],"tags":[{"name":"应用","path":"api/tags/应用.json"}]}